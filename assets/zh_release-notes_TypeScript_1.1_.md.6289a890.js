import{_ as s,o as n,c as a,V as o}from"./chunks/framework.ced88878.js";const h=JSON.parse('{"title":"TypeScript 1.1","description":"","frontmatter":{},"headers":[],"relativePath":"zh/release-notes/TypeScript[1.1].md","lastUpdated":1682668835000}'),l={name:"zh/release-notes/TypeScript[1.1].md"},p=o(`<h1 id="typescript-1-1" tabindex="-1">TypeScript 1.1 <a class="header-anchor" href="#typescript-1-1" aria-label="Permalink to &quot;TypeScript 1.1&quot;">​</a></h1><h2 id="改进性能" tabindex="-1">改进性能 <a class="header-anchor" href="#改进性能" aria-label="Permalink to &quot;改进性能&quot;">​</a></h2><p>1.1版本的编译器速度比所有之前发布的版本快4倍。阅读<a href="http://blogs.msdn.com/b/typescript/archive/2014/10/06/announcing-typescript-1-1-ctp.aspx" target="_blank" rel="noreferrer">这篇博客里的有关图表</a></p><h2 id="更好的模块可见性规则" tabindex="-1">更好的模块可见性规则 <a class="header-anchor" href="#更好的模块可见性规则" aria-label="Permalink to &quot;更好的模块可见性规则&quot;">​</a></h2><p>TypeScript现在只在使用<code>--declaration</code>标记时才严格强制模块里类型的可见性。这在Angular里很有用，例如：</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">module</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">MyControllers</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">interface</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">ZooScope</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">extends</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">ng</span><span style="color:#F6F6F4;">.</span><span style="color:#97E1F1;font-style:italic;">IScope</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    animals</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">Animal</span><span style="color:#F6F6F4;">[];</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">export</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">class</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">ZooController</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// Used to be an error (cannot expose ZooScope), but now is only</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// an error when trying to generate .d.ts files</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">constructor</span><span style="color:#F6F6F4;">(</span><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;font-style:italic;">$scope</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">ZooScope</span><span style="color:#F6F6F4;">) { }</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">/* more code */</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">module</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MyControllers</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ZooScope</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ng</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">IScope</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">animals</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Animal</span><span style="color:#24292E;">[];</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ZooController</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Used to be an error (cannot expose ZooScope), but now is only</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// an error when trying to generate .d.ts files</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">constructor</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#E36209;">$scope</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ZooScope</span><span style="color:#24292E;">) { }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">/* more code */</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div>`,6),e=[p];function t(c,r,y,F,i,d){return n(),a("div",null,e)}const _=s(l,[["render",t]]);export{h as __pageData,_ as default};
