import{_ as s,o,c as e,V as n}from"./chunks/framework.ced88878.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{"display":"Type Roots","oneline":"Specify multiple folders that act like `./node_modules/@types`."},"headers":[],"relativePath":"zh/tsconfig-reference/options/typeRoots.md","lastUpdated":1681915487000}'),a={name:"zh/tsconfig-reference/options/typeRoots.md"},p=n(`<p>By default all <em>visible</em> &quot;<code>@types</code>&quot; packages are included in your compilation. Packages in <code>node_modules/@types</code> of any enclosing folder are considered <em>visible</em>. For example, that means packages within <code>./node_modules/@types/</code>, <code>../node_modules/@types/</code>, <code>../../node_modules/@types/</code>, and so on.</p><p>If <code>typeRoots</code> is specified, <em>only</em> packages under <code>typeRoots</code> will be included. For example:</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">{</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">compilerOptions</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">typeRoots</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> [</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">./typings</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">./vendor/types</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">]</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;compilerOptions&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;typeRoots&quot;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;./typings&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;./vendor/types&quot;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>This config file will include <em>all</em> packages under <code>./typings</code> and <code>./vendor/types</code>, and no packages from <code>./node_modules/@types</code>. All paths are relative to the <code>tsconfig.json</code>.</p>`,4),l=[p];function t(c,r,d,i,y,u){return o(),e("div",null,l)}const E=s(a,[["render",t]]);export{_ as __pageData,E as default};
