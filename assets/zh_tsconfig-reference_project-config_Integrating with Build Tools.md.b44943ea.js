import{_ as s,o as a,c as n,V as l}from"./chunks/framework.ced88878.js";const d=JSON.parse('{"title":"与其它构建工具整合","description":"","frontmatter":{},"headers":[],"relativePath":"zh/tsconfig-reference/project-config/Integrating with Build Tools.md","lastUpdated":1682670826000}'),p={name:"zh/tsconfig-reference/project-config/Integrating with Build Tools.md"},o=l(`<h1 id="与其它构建工具整合" tabindex="-1">与其它构建工具整合 <a class="header-anchor" href="#与其它构建工具整合" aria-label="Permalink to &quot;与其它构建工具整合&quot;">​</a></h1><p>构建工具</p><ul><li><a href="./integrating-with-build-tools#babel">Babel</a></li><li><a href="./integrating-with-build-tools#browserify">Browserify</a></li><li><a href="./integrating-with-build-tools#duo">Duo</a></li><li><a href="./integrating-with-build-tools#grunt">Grunt</a></li><li><a href="./integrating-with-build-tools#gulp">Gulp</a></li><li><a href="./integrating-with-build-tools#jspm">Jspm</a></li><li><a href="./integrating-with-build-tools#webpack">Webpack</a></li><li><a href="./integrating-with-build-tools#msbuild">MSBuild</a></li><li><a href="./integrating-with-build-tools#nuget">NuGet</a></li></ul><h2 id="babel" tabindex="-1">Babel <a class="header-anchor" href="#babel" aria-label="Permalink to &quot;Babel&quot;">​</a></h2><h3 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h3><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">npm </span><span style="color:#E7EE98;">install</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">@babel/cli</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">@babel/core</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">@babel/preset-typescript</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">--save-dev</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">@babel/cli</span><span style="color:#24292E;"> </span><span style="color:#032F62;">@babel/core</span><span style="color:#24292E;"> </span><span style="color:#032F62;">@babel/preset-typescript</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--save-dev</span></span></code></pre></div><h3 id="babelrc" tabindex="-1">.babelrc <a class="header-anchor" href="#babelrc" aria-label="Permalink to &quot;.babelrc&quot;">​</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">{</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">presets</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">: [</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">@babel/preset-typescript</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">]</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;presets&quot;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;@babel/preset-typescript&quot;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="使用命令行工具" tabindex="-1">使用命令行工具 <a class="header-anchor" href="#使用命令行工具" aria-label="Permalink to &quot;使用命令行工具&quot;">​</a></h3><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#97E1F1;">.</span><span style="color:#F6F6F4;">/node_modules/.bin/babel </span><span style="color:#BF9EEE;">--out-file</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">bundle.js</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">src/index.ts</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">.</span><span style="color:#6F42C1;">/node_modules/.bin/babel</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--out-file</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bundle.js</span><span style="color:#24292E;"> </span><span style="color:#032F62;">src/index.ts</span></span></code></pre></div><h3 id="package-json" tabindex="-1">package.json <a class="header-anchor" href="#package-json" aria-label="Permalink to &quot;package.json&quot;">​</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">{</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">scripts</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">: {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">build</span><span style="color:#DEE492;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">babel --out-file bundle.js main.ts</span><span style="color:#DEE492;">&quot;</span></span>
<span class="line"><span style="color:#F6F6F4;">  },</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;scripts&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;build&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;babel --out-file bundle.js main.ts&quot;</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="在命令行上运行babel" tabindex="-1">在命令行上运行Babel <a class="header-anchor" href="#在命令行上运行babel" aria-label="Permalink to &quot;在命令行上运行Babel&quot;">​</a></h3><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">npm </span><span style="color:#E7EE98;">run</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">build</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">run</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span></span></code></pre></div><h2 id="browserify" tabindex="-1">Browserify <a class="header-anchor" href="#browserify" aria-label="Permalink to &quot;Browserify&quot;">​</a></h2><h3 id="安装-1" tabindex="-1">安装 <a class="header-anchor" href="#安装-1" aria-label="Permalink to &quot;安装&quot;">​</a></h3><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">npm </span><span style="color:#E7EE98;">install</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">tsify</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">tsify</span></span></code></pre></div><h3 id="使用命令行交互" tabindex="-1">使用命令行交互 <a class="header-anchor" href="#使用命令行交互" aria-label="Permalink to &quot;使用命令行交互&quot;">​</a></h3><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">browserify </span><span style="color:#E7EE98;">main.ts</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">-p</span><span style="color:#F6F6F4;"> [ tsify --noImplicitAny ] </span><span style="color:#F286C4;">&gt;</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">bundle.js</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">browserify</span><span style="color:#24292E;"> </span><span style="color:#032F62;">main.ts</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-p</span><span style="color:#24292E;"> [ tsify --noImplicitAny ] </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bundle.js</span></span></code></pre></div><h3 id="使用api" tabindex="-1">使用API <a class="header-anchor" href="#使用api" aria-label="Permalink to &quot;使用API&quot;">​</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> browserify </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">require</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">browserify</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> tsify </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">require</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">tsify</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#62E884;">browserify</span><span style="color:#F6F6F4;">()</span></span>
<span class="line"><span style="color:#F6F6F4;">    .</span><span style="color:#62E884;">add</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">main.ts</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F6F6F4;">    .</span><span style="color:#62E884;">plugin</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">tsify</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, { noImplicitAny</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;"> })</span></span>
<span class="line"><span style="color:#F6F6F4;">    .</span><span style="color:#62E884;">bundle</span><span style="color:#F6F6F4;">()</span></span>
<span class="line"><span style="color:#F6F6F4;">    .</span><span style="color:#62E884;">pipe</span><span style="color:#F6F6F4;">(process.stdout);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> browserify </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;browserify&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> tsify </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;tsify&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">browserify</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">    .</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;main.ts&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    .</span><span style="color:#6F42C1;">plugin</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;tsify&#39;</span><span style="color:#24292E;">, { noImplicitAny: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;"> })</span></span>
<span class="line"><span style="color:#24292E;">    .</span><span style="color:#6F42C1;">bundle</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">    .</span><span style="color:#6F42C1;">pipe</span><span style="color:#24292E;">(process.stdout);</span></span></code></pre></div><p>更多详细信息：<a href="https://github.com/smrq/tsify" target="_blank" rel="noreferrer">smrq/tsify</a></p><h2 id="duo" tabindex="-1">Duo <a class="header-anchor" href="#duo" aria-label="Permalink to &quot;Duo&quot;">​</a></h2><h3 id="安装-2" tabindex="-1">安装 <a class="header-anchor" href="#安装-2" aria-label="Permalink to &quot;安装&quot;">​</a></h3><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">npm </span><span style="color:#E7EE98;">install</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">duo-typescript</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">duo-typescript</span></span></code></pre></div><h3 id="使用命令行交互-1" tabindex="-1">使用命令行交互 <a class="header-anchor" href="#使用命令行交互-1" aria-label="Permalink to &quot;使用命令行交互&quot;">​</a></h3><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">duo </span><span style="color:#BF9EEE;">--use</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">duo-typescript</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">entry.ts</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">duo</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--use</span><span style="color:#24292E;"> </span><span style="color:#032F62;">duo-typescript</span><span style="color:#24292E;"> </span><span style="color:#032F62;">entry.ts</span></span></code></pre></div><h3 id="使用api-1" tabindex="-1">使用API <a class="header-anchor" href="#使用api-1" aria-label="Permalink to &quot;使用API&quot;">​</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> Duo </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">require</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">duo</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> fs </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">require</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">fs</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> path </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">require</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">path</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> typescript </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">require</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">duo-typescript</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> out </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> path.</span><span style="color:#62E884;">join</span><span style="color:#F6F6F4;">(__dirname, </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">output.js</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#62E884;">Duo</span><span style="color:#F6F6F4;">(__dirname)</span></span>
<span class="line"><span style="color:#F6F6F4;">    .</span><span style="color:#62E884;">entry</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">entry.ts</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F6F6F4;">    .</span><span style="color:#62E884;">use</span><span style="color:#F6F6F4;">(</span><span style="color:#62E884;">typescript</span><span style="color:#F6F6F4;">())</span></span>
<span class="line"><span style="color:#F6F6F4;">    .</span><span style="color:#62E884;">run</span><span style="color:#F6F6F4;">(</span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">err</span><span style="color:#F6F6F4;">, </span><span style="color:#FFB86C;font-style:italic;">results</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> (err) </span><span style="color:#F286C4;">throw</span><span style="color:#F6F6F4;"> err;</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// Write compiled result to output file</span></span>
<span class="line"><span style="color:#F6F6F4;">        fs.</span><span style="color:#62E884;">writeFileSync</span><span style="color:#F6F6F4;">(out, results.code);</span></span>
<span class="line"><span style="color:#F6F6F4;">    });</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> Duo </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;duo&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> fs </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;fs&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> path </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;path&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> typescript </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;duo-typescript&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> out </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> path.</span><span style="color:#6F42C1;">join</span><span style="color:#24292E;">(__dirname, </span><span style="color:#032F62;">&quot;output.js&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">Duo</span><span style="color:#24292E;">(__dirname)</span></span>
<span class="line"><span style="color:#24292E;">    .</span><span style="color:#6F42C1;">entry</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;entry.ts&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    .</span><span style="color:#6F42C1;">use</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">typescript</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">    .</span><span style="color:#6F42C1;">run</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">err</span><span style="color:#24292E;">, </span><span style="color:#E36209;">results</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (err) </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> err;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// Write compiled result to output file</span></span>
<span class="line"><span style="color:#24292E;">        fs.</span><span style="color:#6F42C1;">writeFileSync</span><span style="color:#24292E;">(out, results.code);</span></span>
<span class="line"><span style="color:#24292E;">    });</span></span></code></pre></div><p>更多详细信息：<a href="https://github.com/frankwallis/duo-typescript" target="_blank" rel="noreferrer">frankwallis/duo-typescript</a></p><h2 id="grunt" tabindex="-1">Grunt <a class="header-anchor" href="#grunt" aria-label="Permalink to &quot;Grunt&quot;">​</a></h2><h3 id="安装-3" tabindex="-1">安装 <a class="header-anchor" href="#安装-3" aria-label="Permalink to &quot;安装&quot;">​</a></h3><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">npm </span><span style="color:#E7EE98;">install</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">grunt-ts</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">grunt-ts</span></span></code></pre></div><h3 id="基本gruntfile-js" tabindex="-1">基本Gruntfile.js <a class="header-anchor" href="#基本gruntfile-js" aria-label="Permalink to &quot;基本Gruntfile.js&quot;">​</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#97E1F1;font-style:italic;">module</span><span style="color:#F6F6F4;">.</span><span style="color:#97E1F1;font-style:italic;">exports</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;">(</span><span style="color:#FFB86C;font-style:italic;">grunt</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    grunt.</span><span style="color:#62E884;">initConfig</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">        ts</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">            default </span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">                src</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> [</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">**/*.ts</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">!node_modules/**/*.ts</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">]</span></span>
<span class="line"><span style="color:#F6F6F4;">            }</span></span>
<span class="line"><span style="color:#F6F6F4;">        }</span></span>
<span class="line"><span style="color:#F6F6F4;">    });</span></span>
<span class="line"><span style="color:#F6F6F4;">    grunt.</span><span style="color:#62E884;">loadNpmTasks</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">grunt-ts</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">    grunt.</span><span style="color:#62E884;">registerTask</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">default</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, [</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">ts</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">]);</span></span>
<span class="line"><span style="color:#F6F6F4;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">module</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">exports</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(</span><span style="color:#E36209;">grunt</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    grunt.</span><span style="color:#6F42C1;">initConfig</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">        ts: {</span></span>
<span class="line"><span style="color:#24292E;">            default : {</span></span>
<span class="line"><span style="color:#24292E;">                src: [</span><span style="color:#032F62;">&quot;**/*.ts&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;!node_modules/**/*.ts&quot;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    });</span></span>
<span class="line"><span style="color:#24292E;">    grunt.</span><span style="color:#6F42C1;">loadNpmTasks</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;grunt-ts&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    grunt.</span><span style="color:#6F42C1;">registerTask</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;default&quot;</span><span style="color:#24292E;">, [</span><span style="color:#032F62;">&quot;ts&quot;</span><span style="color:#24292E;">]);</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><p>更多详细信息：<a href="https://github.com/TypeStrong/grunt-ts" target="_blank" rel="noreferrer">TypeStrong/grunt-ts</a></p><h2 id="gulp" tabindex="-1">Gulp <a class="header-anchor" href="#gulp" aria-label="Permalink to &quot;Gulp&quot;">​</a></h2><h3 id="安装-4" tabindex="-1">安装 <a class="header-anchor" href="#安装-4" aria-label="Permalink to &quot;安装&quot;">​</a></h3><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">npm </span><span style="color:#E7EE98;">install</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">gulp-typescript</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">gulp-typescript</span></span></code></pre></div><h3 id="基本gulpfile-js" tabindex="-1">基本gulpfile.js <a class="header-anchor" href="#基本gulpfile-js" aria-label="Permalink to &quot;基本gulpfile.js&quot;">​</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> gulp </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">require</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">gulp</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> ts </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">require</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">gulp-typescript</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">gulp.</span><span style="color:#62E884;">task</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">default</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> () {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> tsResult </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> gulp.</span><span style="color:#62E884;">src</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">src/*.ts</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F6F6F4;">        .</span><span style="color:#62E884;">pipe</span><span style="color:#F6F6F4;">(</span><span style="color:#62E884;">ts</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">              noImplicitAny</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">              out</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">output.js</span><span style="color:#DEE492;">&quot;</span></span>
<span class="line"><span style="color:#F6F6F4;">        }));</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> tsResult.js.</span><span style="color:#62E884;">pipe</span><span style="color:#F6F6F4;">(gulp.</span><span style="color:#62E884;">dest</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">built/local</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">));</span></span>
<span class="line"><span style="color:#F6F6F4;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> gulp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;gulp&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> ts </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;gulp-typescript&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">gulp.</span><span style="color:#6F42C1;">task</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;default&quot;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> tsResult </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> gulp.</span><span style="color:#6F42C1;">src</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;src/*.ts&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">pipe</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">ts</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">              noImplicitAny: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">              out: </span><span style="color:#032F62;">&quot;output.js&quot;</span></span>
<span class="line"><span style="color:#24292E;">        }));</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> tsResult.js.</span><span style="color:#6F42C1;">pipe</span><span style="color:#24292E;">(gulp.</span><span style="color:#6F42C1;">dest</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;built/local&#39;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><p>更多详细信息：<a href="https://github.com/ivogabe/gulp-typescript" target="_blank" rel="noreferrer">ivogabe/gulp-typescript</a></p><h2 id="jspm" tabindex="-1">Jspm <a class="header-anchor" href="#jspm" aria-label="Permalink to &quot;Jspm&quot;">​</a></h2><h3 id="安装-5" tabindex="-1">安装 <a class="header-anchor" href="#安装-5" aria-label="Permalink to &quot;安装&quot;">​</a></h3><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">npm </span><span style="color:#E7EE98;">install</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">-g</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">jspm@beta</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-g</span><span style="color:#24292E;"> </span><span style="color:#032F62;">jspm@beta</span></span></code></pre></div><p><em>注意：目前jspm的0.16beta版本支持TypeScript</em></p><p>更多详细信息：<a href="https://github.com/Microsoft/TypeScriptSamples/tree/master/jspm" target="_blank" rel="noreferrer">TypeScriptSamples/jspm</a></p><h2 id="webpack" tabindex="-1">Webpack <a class="header-anchor" href="#webpack" aria-label="Permalink to &quot;Webpack&quot;">​</a></h2><h3 id="安装-6" tabindex="-1">安装 <a class="header-anchor" href="#安装-6" aria-label="Permalink to &quot;安装&quot;">​</a></h3><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">npm </span><span style="color:#E7EE98;">install</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">ts-loader</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">--save-dev</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ts-loader</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--save-dev</span></span></code></pre></div><h3 id="webpack-2-webpack-config-js-基础配置" tabindex="-1">Webpack 2 webpack.config.js 基础配置 <a class="header-anchor" href="#webpack-2-webpack-config-js-基础配置" aria-label="Permalink to &quot;Webpack 2 webpack.config.js 基础配置&quot;">​</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#97E1F1;font-style:italic;">module</span><span style="color:#F6F6F4;">.</span><span style="color:#97E1F1;font-style:italic;">exports</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    entry</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">./src/index.tsx</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    output</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">        path</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">/</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">        filename</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">bundle.js</span><span style="color:#DEE492;">&quot;</span></span>
<span class="line"><span style="color:#F6F6F4;">    },</span></span>
<span class="line"><span style="color:#F6F6F4;">    resolve</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">        extensions</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> [</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">.tsx</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">.ts</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">.js</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">.json</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">]</span></span>
<span class="line"><span style="color:#F6F6F4;">    },</span></span>
<span class="line"><span style="color:#F6F6F4;">    module</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">        rules</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> [</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#7B7F8B;">// all files with a &#39;.ts&#39; or &#39;.tsx&#39; extension will be handled by &#39;ts-loader&#39;</span></span>
<span class="line"><span style="color:#F6F6F4;">            { test</span><span style="color:#F286C4;">:</span><span style="color:#E7EE98;"> </span><span style="color:#EE6666;">/</span><span style="color:#E7EE98;">\\.tsx</span><span style="color:#F286C4;">?$</span><span style="color:#EE6666;">/</span><span style="color:#F6F6F4;">, use</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> [</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">ts-loader</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">], exclude</span><span style="color:#F286C4;">:</span><span style="color:#E7EE98;"> </span><span style="color:#EE6666;">/</span><span style="color:#E7EE98;">node_modules</span><span style="color:#EE6666;">/</span><span style="color:#F6F6F4;"> }</span></span>
<span class="line"><span style="color:#F6F6F4;">        ]</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">module</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">exports</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    entry: </span><span style="color:#032F62;">&quot;./src/index.tsx&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    output: {</span></span>
<span class="line"><span style="color:#24292E;">        path: </span><span style="color:#032F62;">&#39;/&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        filename: </span><span style="color:#032F62;">&quot;bundle.js&quot;</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    resolve: {</span></span>
<span class="line"><span style="color:#24292E;">        extensions: [</span><span style="color:#032F62;">&quot;.tsx&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;.ts&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;.js&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;.json&quot;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    module: {</span></span>
<span class="line"><span style="color:#24292E;">        rules: [</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// all files with a &#39;.ts&#39; or &#39;.tsx&#39; extension will be handled by &#39;ts-loader&#39;</span></span>
<span class="line"><span style="color:#24292E;">            { test:</span><span style="color:#032F62;"> /</span><span style="color:#22863A;font-weight:bold;">\\.</span><span style="color:#032F62;">tsx</span><span style="color:#D73A49;">?$</span><span style="color:#032F62;">/</span><span style="color:#24292E;">, use: [</span><span style="color:#032F62;">&quot;ts-loader&quot;</span><span style="color:#24292E;">], exclude:</span><span style="color:#032F62;"> /node_modules/</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">        ]</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="webpack-1-webpack-config-js-基础配置" tabindex="-1">Webpack 1 webpack.config.js 基础配置 <a class="header-anchor" href="#webpack-1-webpack-config-js-基础配置" aria-label="Permalink to &quot;Webpack 1 webpack.config.js 基础配置&quot;">​</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#97E1F1;font-style:italic;">module</span><span style="color:#F6F6F4;">.</span><span style="color:#97E1F1;font-style:italic;">exports</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    entry</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">./src/index.tsx</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    output</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">        filename</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">bundle.js</span><span style="color:#DEE492;">&quot;</span></span>
<span class="line"><span style="color:#F6F6F4;">    },</span></span>
<span class="line"><span style="color:#F6F6F4;">    resolve</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// Add &#39;.ts&#39; and &#39;.tsx&#39; as a resolvable extension.</span></span>
<span class="line"><span style="color:#F6F6F4;">        extensions</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> [</span><span style="color:#DEE492;">&quot;&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">.webpack.js</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">.web.js</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">.ts</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">.tsx</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">.js</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">]</span></span>
<span class="line"><span style="color:#F6F6F4;">    },</span></span>
<span class="line"><span style="color:#F6F6F4;">    module</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">        loaders</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> [</span></span>
<span class="line"><span style="color:#F6F6F4;">            </span><span style="color:#7B7F8B;">// all files with a &#39;.ts&#39; or &#39;.tsx&#39; extension will be handled by &#39;ts-loader&#39;</span></span>
<span class="line"><span style="color:#F6F6F4;">            { test</span><span style="color:#F286C4;">:</span><span style="color:#E7EE98;"> </span><span style="color:#EE6666;">/</span><span style="color:#E7EE98;">\\.tsx</span><span style="color:#F286C4;">?$</span><span style="color:#EE6666;">/</span><span style="color:#F6F6F4;">, loader</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">ts-loader</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> }</span></span>
<span class="line"><span style="color:#F6F6F4;">        ]</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">module</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">exports</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    entry: </span><span style="color:#032F62;">&quot;./src/index.tsx&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    output: {</span></span>
<span class="line"><span style="color:#24292E;">        filename: </span><span style="color:#032F62;">&quot;bundle.js&quot;</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    resolve: {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// Add &#39;.ts&#39; and &#39;.tsx&#39; as a resolvable extension.</span></span>
<span class="line"><span style="color:#24292E;">        extensions: [</span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;.webpack.js&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;.web.js&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;.ts&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;.tsx&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;.js&quot;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    module: {</span></span>
<span class="line"><span style="color:#24292E;">        loaders: [</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// all files with a &#39;.ts&#39; or &#39;.tsx&#39; extension will be handled by &#39;ts-loader&#39;</span></span>
<span class="line"><span style="color:#24292E;">            { test:</span><span style="color:#032F62;"> /</span><span style="color:#22863A;font-weight:bold;">\\.</span><span style="color:#032F62;">tsx</span><span style="color:#D73A49;">?$</span><span style="color:#032F62;">/</span><span style="color:#24292E;">, loader: </span><span style="color:#032F62;">&quot;ts-loader&quot;</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">        ]</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><p>查看<a href="https://www.npmjs.com/package/ts-loader" target="_blank" rel="noreferrer">更多关于ts-loader的详细信息</a></p><p>或者</p><ul><li><a href="https://www.npmjs.com/package/awesome-typescript-loader" target="_blank" rel="noreferrer">awesome-typescript-loader</a></li></ul><h2 id="msbuild" tabindex="-1">MSBuild <a class="header-anchor" href="#msbuild" aria-label="Permalink to &quot;MSBuild&quot;">​</a></h2><p>更新工程文件，包含本地安装的<code>Microsoft.TypeScript.Default.props</code>（在顶端）和<code>Microsoft.TypeScript.targets</code>（在底部）文件：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;Project ToolsVersion=&quot;4.0&quot; DefaultTargets=&quot;Build&quot; xmlns=&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">  &lt;!-- Include default props at the top --&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">  &lt;Import</span></span>
<span class="line"><span style="color:#f6f6f4;">      Project=&quot;$(MSBuildExtensionsPath32)\\Microsoft\\VisualStudio\\v$(VisualStudioVersion)\\TypeScript\\Microsoft.TypeScript.Default.props&quot;</span></span>
<span class="line"><span style="color:#f6f6f4;">      Condition=&quot;Exists(&#39;$(MSBuildExtensionsPath32)\\Microsoft\\VisualStudio\\v$(VisualStudioVersion)\\TypeScript\\Microsoft.TypeScript.Default.props&#39;)&quot; /&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;"></span></span>
<span class="line"><span style="color:#f6f6f4;">  &lt;!-- TypeScript configurations go here --&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">  &lt;PropertyGroup Condition=&quot;&#39;$(Configuration)&#39; == &#39;Debug&#39;&quot;&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">    &lt;TypeScriptRemoveComments&gt;false&lt;/TypeScriptRemoveComments&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">    &lt;TypeScriptSourceMap&gt;true&lt;/TypeScriptSourceMap&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">  &lt;/PropertyGroup&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">  &lt;PropertyGroup Condition=&quot;&#39;$(Configuration)&#39; == &#39;Release&#39;&quot;&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">    &lt;TypeScriptRemoveComments&gt;true&lt;/TypeScriptRemoveComments&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">    &lt;TypeScriptSourceMap&gt;false&lt;/TypeScriptSourceMap&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">  &lt;/PropertyGroup&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;"></span></span>
<span class="line"><span style="color:#f6f6f4;">  &lt;!-- Include default targets at the bottom --&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">  &lt;Import</span></span>
<span class="line"><span style="color:#f6f6f4;">      Project=&quot;$(MSBuildExtensionsPath32)\\Microsoft\\VisualStudio\\v$(VisualStudioVersion)\\TypeScript\\Microsoft.TypeScript.targets&quot;</span></span>
<span class="line"><span style="color:#f6f6f4;">      Condition=&quot;Exists(&#39;$(MSBuildExtensionsPath32)\\Microsoft\\VisualStudio\\v$(VisualStudioVersion)\\TypeScript\\Microsoft.TypeScript.targets&#39;)&quot; /&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;/Project&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt;Project ToolsVersion=&quot;4.0&quot; DefaultTargets=&quot;Build&quot; xmlns=&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;&gt;</span></span>
<span class="line"><span style="color:#24292e;">  &lt;!-- Include default props at the top --&gt;</span></span>
<span class="line"><span style="color:#24292e;">  &lt;Import</span></span>
<span class="line"><span style="color:#24292e;">      Project=&quot;$(MSBuildExtensionsPath32)\\Microsoft\\VisualStudio\\v$(VisualStudioVersion)\\TypeScript\\Microsoft.TypeScript.Default.props&quot;</span></span>
<span class="line"><span style="color:#24292e;">      Condition=&quot;Exists(&#39;$(MSBuildExtensionsPath32)\\Microsoft\\VisualStudio\\v$(VisualStudioVersion)\\TypeScript\\Microsoft.TypeScript.Default.props&#39;)&quot; /&gt;</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">  &lt;!-- TypeScript configurations go here --&gt;</span></span>
<span class="line"><span style="color:#24292e;">  &lt;PropertyGroup Condition=&quot;&#39;$(Configuration)&#39; == &#39;Debug&#39;&quot;&gt;</span></span>
<span class="line"><span style="color:#24292e;">    &lt;TypeScriptRemoveComments&gt;false&lt;/TypeScriptRemoveComments&gt;</span></span>
<span class="line"><span style="color:#24292e;">    &lt;TypeScriptSourceMap&gt;true&lt;/TypeScriptSourceMap&gt;</span></span>
<span class="line"><span style="color:#24292e;">  &lt;/PropertyGroup&gt;</span></span>
<span class="line"><span style="color:#24292e;">  &lt;PropertyGroup Condition=&quot;&#39;$(Configuration)&#39; == &#39;Release&#39;&quot;&gt;</span></span>
<span class="line"><span style="color:#24292e;">    &lt;TypeScriptRemoveComments&gt;true&lt;/TypeScriptRemoveComments&gt;</span></span>
<span class="line"><span style="color:#24292e;">    &lt;TypeScriptSourceMap&gt;false&lt;/TypeScriptSourceMap&gt;</span></span>
<span class="line"><span style="color:#24292e;">  &lt;/PropertyGroup&gt;</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">  &lt;!-- Include default targets at the bottom --&gt;</span></span>
<span class="line"><span style="color:#24292e;">  &lt;Import</span></span>
<span class="line"><span style="color:#24292e;">      Project=&quot;$(MSBuildExtensionsPath32)\\Microsoft\\VisualStudio\\v$(VisualStudioVersion)\\TypeScript\\Microsoft.TypeScript.targets&quot;</span></span>
<span class="line"><span style="color:#24292e;">      Condition=&quot;Exists(&#39;$(MSBuildExtensionsPath32)\\Microsoft\\VisualStudio\\v$(VisualStudioVersion)\\TypeScript\\Microsoft.TypeScript.targets&#39;)&quot; /&gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt;/Project&gt;</span></span></code></pre></div><p>关于配置MSBuild编译器选项的更多详细信息，请参考：<a href="./compiler-options-in-msbuild">在MSBuild里使用编译选项</a></p><h2 id="nuget" tabindex="-1">NuGet <a class="header-anchor" href="#nuget" aria-label="Permalink to &quot;NuGet&quot;">​</a></h2><ul><li>右键点击 -&gt; Manage NuGet Packages</li><li>查找<code>Microsoft.TypeScript.MSBuild</code></li><li>点击<code>Install</code></li><li>安装完成后，Rebuild。</li></ul><p>更多详细信息请参考<a href="http://docs.nuget.org/Consume/Package-Manager-Dialog" target="_blank" rel="noreferrer">Package Manager Dialog</a>和<a href="https://github.com/Microsoft/TypeScript/wiki/Nightly-drops#using-nuget-with-msbuild" target="_blank" rel="noreferrer">using nightly builds with NuGet</a></p>`,64),e=[o];function t(c,r,y,i,F,E){return a(),n("div",null,e)}const h=s(p,[["render",t]]);export{d as __pageData,h as default};
