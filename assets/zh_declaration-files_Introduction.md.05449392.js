import{_ as a,o as e,c as t,V as l}from"./chunks/framework.ced88878.js";const f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"zh/declaration-files/Introduction.md","lastUpdated":1682668835000}'),r={name:"zh/declaration-files/Introduction.md"},d=l('<p>声明文件一章的目的是教你如何编写高质量的 TypeScript 声明文件。 我们假设你对 TypeScript 已经有了基本的了解。</p><p>如果没有，请先阅读<a href="./../handbook/basic-types">TypeScript 手册</a> 来了解一些基本知识，尤其是类型和模块的部分。</p><p>需要编写<code>.d.ts</code>文件的常见场景是为某个 npm 包添加类型信息。 如果是这种情况，你可以直接阅读<a href="./templates/module.d.ts">Modules .d.ts</a></p><p>这篇指南被分成了以下章节。</p><h2 id="示例" tabindex="-1"><a href="./by-example">示例</a> <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;[示例](./by-example.md)&quot;">​</a></h2><p>在编写声明文件时，我们经常遇到以下情况，那就是需要根据代码库提供的示例来编写声明文件。 <a href="./by-example">示例</a>一节展示了了许多常见的 API 模式，以及如何为它们编写声明文件。 该指南面向的是 TypeScript 的初学者，这些人可能并不熟悉 TypeScript 语言的每个特性。</p><h2 id="结构" tabindex="-1"><a href="./library-structures">结构</a> <a class="header-anchor" href="#结构" aria-label="Permalink to &quot;[结构](./library-structures.md)&quot;">​</a></h2><p><a href="./library-structures">结构</a>一节将帮助你了解常见库的格式以及如何为每种格式书写正确的声明文件。 如果你正在编辑一个已有文件，那么你可能不需要阅读此章节。 如果你在编写新的声明文件，那么强烈建议阅读此章节以理解库的不同格式是如何影响声明文件的编写的。</p><h2 id="模版" tabindex="-1"><a href="./templates">模版</a> <a class="header-anchor" href="#模版" aria-label="Permalink to &quot;[模版](./templates.md)&quot;">​</a></h2><p>在<a href="./templates">模版</a>一节里，你能找到一些声明文件，它们对于编写新的声明文件来讲会有所帮助。 如果你已经了解了库的结构，那么可以阅读相应的模版文件：</p><ul><li><a href="./templates/global-modifying-module.d.ts">global-modifying-module.d.ts</a></li><li><a href="./templates/global-plugin.d.ts">global-plugin.d.ts</a></li><li><a href="./templates/global.d.ts">global.d.ts</a></li><li><a href="./templates/module-class.d.ts">module-class.d.ts</a></li><li><a href="./templates/module-function.d.ts">module-function.d.ts</a></li><li><a href="./templates/module-plugin.d.ts">module-plugin.d.ts</a></li><li><a href="./templates/module.d.ts">module.d.ts</a></li></ul><h2 id="规范" tabindex="-1"><a href="./do-s-and-don-ts">规范</a> <a class="header-anchor" href="#规范" aria-label="Permalink to &quot;[规范](./do-s-and-don-ts.md)&quot;">​</a></h2><p>声明文件里有些常见错误是很容易就可以避免的。 <a href="./do-s-and-don-ts">规范</a>一节列出了常见的错误，并且描述了如何检测以及修复它们。 每个人都应该阅读这个章节以了解如何避免常见错误。</p><h2 id="深入" tabindex="-1"><a href="./deep-dive">深入</a> <a class="header-anchor" href="#深入" aria-label="Permalink to &quot;[深入](./deep-dive.md)&quot;">​</a></h2><p>针对那些对声明文件底层工作机制感兴趣的老手们，<a href="./deep-dive">深入</a>一节解释了编写声明文件时的很多高级概念， 并且展示了如何利用这些概念来创建整洁和直观的声明文件。</p><h2 id="发布到-npm" tabindex="-1"><a href="./publishing">发布到 npm</a> <a class="header-anchor" href="#发布到-npm" aria-label="Permalink to &quot;[发布到 npm](./publishing.md)&quot;">​</a></h2><p><a href="./publishing">发布</a>一节讲解了如何将声明文件发布为 npm 包，以及如何管理包的依赖。</p><h2 id="查找与安装声明文件" tabindex="-1"><a href="./consumption">查找与安装声明文件</a> <a class="header-anchor" href="#查找与安装声明文件" aria-label="Permalink to &quot;[查找与安装声明文件](./consumption.md)&quot;">​</a></h2><p>对于 JavaScript 库的使用者来讲，<a href="./consumption">使用</a>一节提供了一些简单步骤来查找与安装相应的声明文件。</p>',19),o=[d];function i(s,n,p,h,m,c){return e(),t("div",null,o)}const b=a(r,[["render",i]]);export{f as __pageData,b as default};
