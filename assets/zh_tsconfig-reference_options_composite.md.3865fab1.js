import{_ as e,o as t,c as o,V as i}from"./chunks/framework.ced88878.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{"display":"Composite","oneline":"Enable constraints that allow a TypeScript project to be used with project references."},"headers":[],"relativePath":"zh/tsconfig-reference/options/composite.md","lastUpdated":1681915487000}'),c={name:"zh/tsconfig-reference/options/composite.md"},n=i('<p>The <code>composite</code> option enforces certain constraints which make it possible for build tools (including TypeScript itself, under <code>--build</code> mode) to quickly determine if a project has been built yet.</p><p>When this setting is on:</p><ul><li><p>The <a href="#rootDir"><code>rootDir</code></a> setting, if not explicitly set, defaults to the directory containing the <code>tsconfig.json</code> file.</p></li><li><p>All implementation files must be matched by an <a href="#include"><code>include</code></a> pattern or listed in the <a href="#files"><code>files</code></a> array. If this constraint is violated, <code>tsc</code> will inform you which files weren&#39;t specified.</p></li><li><p><a href="#declaration"><code>declaration</code></a> defaults to <code>true</code></p></li></ul><p>You can find documentation on TypeScript projects in <a href="https://www.typescriptlang.org/docs/handbook/project-references.html" target="_blank" rel="noreferrer">the handbook</a>.</p>',4),r=[n];function s(a,d,l,p,f,h){return t(),o("div",null,r)}const u=e(c,[["render",s]]);export{m as __pageData,u as default};
