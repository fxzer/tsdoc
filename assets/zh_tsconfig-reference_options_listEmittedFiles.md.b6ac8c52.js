import{_ as s,o as a,c as n,V as e}from"./chunks/framework.ced88878.js";const F=JSON.parse('{"title":"","description":"","frontmatter":{"display":"List Emitted Files","oneline":"Print the names of emitted files after a compilation."},"headers":[],"relativePath":"zh/tsconfig-reference/options/listEmittedFiles.md","lastUpdated":1681915487000}'),l={name:"zh/tsconfig-reference/options/listEmittedFiles.md"},p=e(`<p>Print names of generated files part of the compilation to the terminal.</p><p>This flag is useful in two cases:</p><ul><li>You want to transpile TypeScript as a part of a build chain in the terminal where the filenames are processed in the next command.</li><li>You are not sure that TypeScript has included a file you expected, as a part of debugging the <a href="#Project_Files_0">file inclusion settings</a>.</li></ul><p>For example:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">example</span></span>
<span class="line"><span style="color:#f6f6f4;">├── index.ts</span></span>
<span class="line"><span style="color:#f6f6f4;">├── package.json</span></span>
<span class="line"><span style="color:#f6f6f4;">└── tsconfig.json</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">example</span></span>
<span class="line"><span style="color:#24292e;">├── index.ts</span></span>
<span class="line"><span style="color:#24292e;">├── package.json</span></span>
<span class="line"><span style="color:#24292e;">└── tsconfig.json</span></span></code></pre></div><p>With:</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">{</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">compilerOptions</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">declaration</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">listFiles</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;compilerOptions&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;declaration&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;listFiles&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>Would echo paths like:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">$ npm run tsc</span></span>
<span class="line"><span style="color:#f6f6f4;"></span></span>
<span class="line"><span style="color:#f6f6f4;">path/to/example/index.js</span></span>
<span class="line"><span style="color:#f6f6f4;">path/to/example/index.d.ts</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ npm run tsc</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">path/to/example/index.js</span></span>
<span class="line"><span style="color:#24292e;">path/to/example/index.d.ts</span></span></code></pre></div><p>Normally, TypeScript would return silently on success.</p>`,10),o=[p];function t(c,i,r,d,y,f){return a(),n("div",null,o)}const h=s(l,[["render",t]]);export{F as __pageData,h as default};
