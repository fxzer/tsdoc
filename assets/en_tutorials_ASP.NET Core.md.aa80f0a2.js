import{_ as s,o as n,c as a,V as o}from"./chunks/framework.ced88878.js";const l="/tsdoc-vitepress/images/tutorials/aspnet/createwebapp.png",p="/tsdoc-vitepress/images/tutorials/aspnet/namewebapp.png",e="/tsdoc-vitepress/images/tutorials/aspnet/emptytemplate.png",t="/tsdoc-vitepress/images/tutorials/aspnet/workingsite.png",c="/tsdoc-vitepress/images/tutorials/aspnet/downloaddependency.png",r="/tsdoc-vitepress/images/tutorials/aspnet/newfolder.png",i="/tsdoc-vitepress/images/tutorials/aspnet/scripts.png",y="/tsdoc-vitepress/images/tutorials/aspnet/tsfile.png",F="/tsdoc-vitepress/images/tutorials/aspnet/tsconfig.png",u="/tsdoc-vitepress/images/tutorials/aspnet/packagejson.png",d="/tsdoc-vitepress/images/tutorials/aspnet/npm.png",E="/tsdoc-vitepress/images/tutorials/aspnet/taskrunner.png",g="/tsdoc-vitepress/images/tutorials/aspnet/taskrunnerrefresh.png",h="/tsdoc-vitepress/images/tutorials/aspnet/debugger.png",T=JSON.parse('{"title":"ASP.NET Core","description":"","frontmatter":{"title":"ASP.NET Core","layout":"docs","permalink":"/docs/handbook/asp-net-core.html","oneline":"Using TypeScript in ASP.NET Core"},"headers":[],"relativePath":"en/tutorials/ASP.NET Core.md","lastUpdated":1681915487000}'),m={name:"en/tutorials/ASP.NET Core.md"},f=o('<h2 id="install-asp-net-core-and-typescript" tabindex="-1">Install ASP.NET Core and TypeScript <a class="header-anchor" href="#install-asp-net-core-and-typescript" aria-label="Permalink to &quot;Install ASP.NET Core and TypeScript&quot;">​</a></h2><p>First, install <a href="https://dotnet.microsoft.com/apps/aspnet" target="_blank" rel="noreferrer">ASP.NET Core</a> if you need it. This quick-start guide requires Visual Studio 2015 or 2017.</p><p>Next, if your version of Visual Studio does not already have the latest TypeScript, you can <a href="https://www.typescriptlang.org/index.html#download-links" target="_blank" rel="noreferrer">install it</a>.</p><h2 id="create-a-new-project" tabindex="-1">Create a new project <a class="header-anchor" href="#create-a-new-project" aria-label="Permalink to &quot;Create a new project&quot;">​</a></h2><ol><li>Choose <strong>File</strong></li><li>Choose <strong>New Project</strong> (Ctrl + Shift + N)</li><li>Search for <strong>.NET Core</strong> in the project search bar</li><li>Select <strong>ASP.NET Core Web Application</strong> and press the <em>Next</em> button</li></ol><p><img src="'+l+'" alt="Visual Studio Project Window Screenshot"></p><ol start="5"><li>Name your project and solution. After select the <em>Create</em> button</li></ol><p><img src="'+p+'" alt="Visual Studio New Project Window Screenshot"></p><ol start="6"><li>In the last window, select the <strong>Empty</strong> template and press the <em>Create</em> button</li></ol><p><img src="'+e+'" alt="Visual Studio Web Application Screenshot"></p><p>Run the application and make sure that it works.</p><p><img src="'+t+'" alt="A screenshot of Edge showing &quot;Hello World&quot; as success"></p><h3 id="set-up-the-server" tabindex="-1">Set up the server <a class="header-anchor" href="#set-up-the-server" aria-label="Permalink to &quot;Set up the server&quot;">​</a></h3><p>Open <strong>Dependencies &gt; Manage NuGet Packages &gt; Browse.</strong> Search and install <code>Microsoft.AspNetCore.StaticFiles</code> and <code>Microsoft.TypeScript.MSBuild</code>:</p><p><img src="'+c+`" alt="The Visual Studio search for Nuget"></p><p>Open up your <code>Startup.cs</code> file and edit your <code>Configure</code> function to look like this:</p><div class="language-cs"><button title="Copy Code" class="copy"></button><span class="lang">cs</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Configure</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">IApplicationBuilder</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;font-style:italic;">app</span><span style="color:#F6F6F4;">, </span><span style="color:#97E1F1;font-style:italic;">IHostEnvironment</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;font-style:italic;">env</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F6F6F4;">{</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> (env.</span><span style="color:#62E884;">IsDevelopment</span><span style="color:#F6F6F4;">())</span></span>
<span class="line"><span style="color:#F6F6F4;">    {</span></span>
<span class="line"><span style="color:#F6F6F4;">        app.</span><span style="color:#62E884;">UseDeveloperExceptionPage</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    app.</span><span style="color:#62E884;">UseDefaultFiles</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">    app.</span><span style="color:#62E884;">UseStaticFiles</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Configure</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">IApplicationBuilder</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">app</span><span style="color:#24292E;">, </span><span style="color:#6F42C1;">IHostEnvironment</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">env</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (env.</span><span style="color:#6F42C1;">IsDevelopment</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">        app.</span><span style="color:#6F42C1;">UseDeveloperExceptionPage</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    app.</span><span style="color:#6F42C1;">UseDefaultFiles</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    app.</span><span style="color:#6F42C1;">UseStaticFiles</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>You may need to restart VS for the red squiggly lines below <code>UseDefaultFiles</code> and <code>UseStaticFiles</code> to disappear.</p><h2 id="add-typescript" tabindex="-1">Add TypeScript <a class="header-anchor" href="#add-typescript" aria-label="Permalink to &quot;Add TypeScript&quot;">​</a></h2><p>Next we will add a new folder and call it <code>scripts</code>.</p><p><img src="`+r+'" alt="The Path of &quot;Add&quot; then &quot;New Folder&quot; in Visual Studio from a Web Project"></p><p><img src="'+i+'" alt=""></p><h2 id="add-typescript-code" tabindex="-1">Add TypeScript code <a class="header-anchor" href="#add-typescript-code" aria-label="Permalink to &quot;Add TypeScript code&quot;">​</a></h2><p>Right click on <code>scripts</code> and click <strong>New Item</strong>. Then choose <strong>TypeScript File</strong> and name the file <code>app.ts</code></p><p><img src="'+y+`" alt="A highlight of the new folder"></p><h3 id="add-example-code" tabindex="-1">Add example code <a class="header-anchor" href="#add-example-code" aria-label="Permalink to &quot;Add example code&quot;">​</a></h3><p>Add the following code to the <code>app.ts</code> file.</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">sayHello</span><span style="color:#F6F6F4;">() {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> compiler </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> (document.</span><span style="color:#62E884;">getElementById</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">compiler</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">as</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">HTMLInputElement</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F6F6F4;">    .value;</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> framework </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> (document.</span><span style="color:#62E884;">getElementById</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">framework</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">as</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">HTMLInputElement</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F6F6F4;">    .value;</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">\`Hello from </span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">compiler</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;"> and </span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">framework</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;">!\`</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">sayHello</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">compiler</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (document.</span><span style="color:#6F42C1;">getElementById</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;compiler&quot;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">HTMLInputElement</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    .value;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">framework</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (document.</span><span style="color:#6F42C1;">getElementById</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;framework&quot;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">HTMLInputElement</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    .value;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`Hello from \${</span><span style="color:#24292E;">compiler</span><span style="color:#032F62;">} and \${</span><span style="color:#24292E;">framework</span><span style="color:#032F62;">}!\`</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="set-up-the-build" tabindex="-1">Set up the build <a class="header-anchor" href="#set-up-the-build" aria-label="Permalink to &quot;Set up the build&quot;">​</a></h2><p><em>Configure the TypeScript compiler</em></p><p>First we need to tell TypeScript how to build. Right click on <code>scripts</code> and click <strong>New Item</strong>. Then choose <strong>TypeScript Configuration File</strong> and use the default name of <code>tsconfig.json</code></p><p><img src="`+F+`" alt="A screenshot showing the new file diaglogue with TypeScript JSON Config selected"></p><p>Replace the contents of the <code>tsconfig.json</code> file with:</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">{</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">compilerOptions</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">noEmitOnError</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">noImplicitAny</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">sourceMap</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">target</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">es6</span><span style="color:#DEE492;">&quot;</span></span>
<span class="line"><span style="color:#F6F6F4;">  },</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">files</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> [</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">./app.ts</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">],</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">compileOnSave</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;compilerOptions&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;noEmitOnError&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;noImplicitAny&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;sourceMap&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;target&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;es6&quot;</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;files&quot;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;./app.ts&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;compileOnSave&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><ul><li><a href="/tsdoc-vitepress/tsconfig#noEmitOnError"><code>noEmitOnError</code></a> : Do not emit outputs if any errors were reported.</li><li><a href="/tsdoc-vitepress/tsconfig#noImplicitAny"><code>noImplicitAny</code></a> : Raise error on expressions and declarations with an implied <code>any</code> type.</li><li><a href="/tsdoc-vitepress/tsconfig#sourceMap"><code>sourceMap</code></a> : Generates corresponding <code>.map</code> file.</li><li><a href="/tsdoc-vitepress/tsconfig#target"><code>target</code></a> : Specify ECMAScript target version.</li></ul><p>Note: <code>&quot;ESNext&quot;</code> targets latest supported</p><p><a href="/tsdoc-vitepress/tsconfig#noImplicitAny"><code>noImplicitAny</code></a> is good idea whenever you’re writing new code — you can make sure that you don’t write any untyped code by mistake. <code>&quot;compileOnSave&quot;</code> makes it easy to update your code in a running web app.</p><h4 id="set-up-npm" tabindex="-1"><em>Set up NPM</em> <a class="header-anchor" href="#set-up-npm" aria-label="Permalink to &quot;_Set up NPM_&quot;">​</a></h4><p>We need to setup NPM so that JavaScript packages can be downloaded. Right click on the project and select <strong>New Item</strong>. Then choose <strong>NPM Configuration File</strong> and use the default name of <code>package.json</code>.</p><p><img src="`+u+`" alt="Screenshot of VS showing new file dialog with &#39;npm configuration file&#39; selected"></p><p>Inside the <code>&quot;devDependencies&quot;</code> section of the <code>package.json</code> file, add <em>gulp</em> and <em>del</em></p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">devDependencies</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">: {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">gulp</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">4.0.2</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">del</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">5.1.0</span><span style="color:#DEE492;">&quot;</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&quot;devDependencies&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;gulp&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;4.0.2&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;del&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;5.1.0&quot;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>Visual Studio should start installing gulp and del as soon as you save the file. If not, right-click package.json and then Restore Packages.</p><p>After you should see an <code>npm</code> folder in your solution explorer</p><p><img src="`+d+`" alt="Screenshot of VS showing npm folder"></p><h4 id="set-up-gulp" tabindex="-1"><em>Set up gulp</em> <a class="header-anchor" href="#set-up-gulp" aria-label="Permalink to &quot;_Set up gulp_&quot;">​</a></h4><p>Right click on the project and click <strong>New Item</strong>. Then choose <strong>JavaScript File</strong> and use the name of <code>gulpfile.js</code></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">/// &lt;binding AfterBuild=&#39;default&#39; Clean=&#39;clean&#39; /&gt;</span></span>
<span class="line"><span style="color:#7B7F8B;">/*</span></span>
<span class="line"><span style="color:#7B7F8B;">This file is the main entry point for defining Gulp tasks and using Gulp plugins.</span></span>
<span class="line"><span style="color:#7B7F8B;">Click here to learn more. http://go.microsoft.com/fwlink/?LinkId=518007</span></span>
<span class="line"><span style="color:#7B7F8B;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> gulp </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">require</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">gulp</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> del </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">require</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">del</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> paths </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  scripts</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> [</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">scripts/**/*.js</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">scripts/**/*.ts</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">scripts/**/*.map</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">],</span></span>
<span class="line"><span style="color:#F6F6F4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">gulp.</span><span style="color:#62E884;">task</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">clean</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> () {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">del</span><span style="color:#F6F6F4;">([</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">wwwroot/scripts/**/*</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">]);</span></span>
<span class="line"><span style="color:#F6F6F4;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">gulp.</span><span style="color:#62E884;">task</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">default</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">done</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    gulp.</span><span style="color:#62E884;">src</span><span style="color:#F6F6F4;">(paths.scripts).</span><span style="color:#62E884;">pipe</span><span style="color:#F6F6F4;">(gulp.</span><span style="color:#62E884;">dest</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">wwwroot/scripts</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">));</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#62E884;">done</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/// &lt;binding AfterBuild=&#39;default&#39; Clean=&#39;clean&#39; /&gt;</span></span>
<span class="line"><span style="color:#6A737D;">/*</span></span>
<span class="line"><span style="color:#6A737D;">This file is the main entry point for defining Gulp tasks and using Gulp plugins.</span></span>
<span class="line"><span style="color:#6A737D;">Click here to learn more. http://go.microsoft.com/fwlink/?LinkId=518007</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> gulp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;gulp&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> del </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;del&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> paths </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  scripts: [</span><span style="color:#032F62;">&quot;scripts/**/*.js&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;scripts/**/*.ts&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;scripts/**/*.map&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">gulp.</span><span style="color:#6F42C1;">task</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;clean&quot;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">del</span><span style="color:#24292E;">([</span><span style="color:#032F62;">&quot;wwwroot/scripts/**/*&quot;</span><span style="color:#24292E;">]);</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">gulp.</span><span style="color:#6F42C1;">task</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;default&quot;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">done</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    gulp.</span><span style="color:#6F42C1;">src</span><span style="color:#24292E;">(paths.scripts).</span><span style="color:#6F42C1;">pipe</span><span style="color:#24292E;">(gulp.</span><span style="color:#6F42C1;">dest</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;wwwroot/scripts&quot;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">done</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><p>The first line tells Visual Studio to run the task ‘default’ after the build finishes. It will also run the ‘clean’ task when you ask Visual Studio to clean the build.</p><p>Now right-click on <code>gulpfile.js</code> and click Task Runner Explorer.</p><p><img src="`+E+'" alt="Screenshot of right clicking on the &quot;Gulpfile.js&quot; with &#39;Task Runner Exploere&#39; selected"></p><p>If ‘default’ and ‘clean’ tasks don’t show up, refresh the explorer:</p><p><img src="'+g+`" alt="Screenshot of task explorer with &quot;Gulpfile.js&quot; in it"></p><h2 id="write-a-html-page" tabindex="-1">Write a HTML page <a class="header-anchor" href="#write-a-html-page" aria-label="Permalink to &quot;Write a HTML page&quot;">​</a></h2><p>Right click on the <code>wwwroot</code> folder (if you don&#39;t see the folder try building the project) and add a New Item named <code>index.html</code> inside. Use the following code for <code>index.html</code></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">&lt;!DOCTYPE html&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;html&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;head&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">    &lt;meta charset=&quot;utf-8&quot; /&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">    &lt;script src=&quot;scripts/app.js&quot;&gt;&lt;/script&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">    &lt;title&gt;&lt;/title&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;/head&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;body&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">    &lt;div id=&quot;message&quot;&gt;&lt;/div&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">    &lt;div&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">        Compiler: &lt;input id=&quot;compiler&quot; value=&quot;TypeScript&quot; onkeyup=&quot;document.getElementById(&#39;message&#39;).innerText = sayHello()&quot; /&gt;&lt;br /&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">        Framework: &lt;input id=&quot;framework&quot; value=&quot;ASP.NET&quot; onkeyup=&quot;document.getElementById(&#39;message&#39;).innerText = sayHello()&quot; /&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">    &lt;/div&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;/body&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;/html&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&lt;!DOCTYPE html&gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt;html&gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt;head&gt;</span></span>
<span class="line"><span style="color:#24292e;">    &lt;meta charset=&quot;utf-8&quot; /&gt;</span></span>
<span class="line"><span style="color:#24292e;">    &lt;script src=&quot;scripts/app.js&quot;&gt;&lt;/script&gt;</span></span>
<span class="line"><span style="color:#24292e;">    &lt;title&gt;&lt;/title&gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt;/head&gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt;body&gt;</span></span>
<span class="line"><span style="color:#24292e;">    &lt;div id=&quot;message&quot;&gt;&lt;/div&gt;</span></span>
<span class="line"><span style="color:#24292e;">    &lt;div&gt;</span></span>
<span class="line"><span style="color:#24292e;">        Compiler: &lt;input id=&quot;compiler&quot; value=&quot;TypeScript&quot; onkeyup=&quot;document.getElementById(&#39;message&#39;).innerText = sayHello()&quot; /&gt;&lt;br /&gt;</span></span>
<span class="line"><span style="color:#24292e;">        Framework: &lt;input id=&quot;framework&quot; value=&quot;ASP.NET&quot; onkeyup=&quot;document.getElementById(&#39;message&#39;).innerText = sayHello()&quot; /&gt;</span></span>
<span class="line"><span style="color:#24292e;">    &lt;/div&gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt;/body&gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt;/html&gt;</span></span></code></pre></div><h2 id="test" tabindex="-1">Test <a class="header-anchor" href="#test" aria-label="Permalink to &quot;Test&quot;">​</a></h2><ol><li>Run the project</li><li>As you type on the boxes you should see the message appear/change!</li></ol><p><img src="https://media.giphy.com/media/U3mTibRAx34DG3zhAN/giphy.gif" alt="A GIF of Edge showing the code you have just wrote"></p><h2 id="debug" tabindex="-1">Debug <a class="header-anchor" href="#debug" aria-label="Permalink to &quot;Debug&quot;">​</a></h2><ol><li>In Edge, press F12 and click the Debugger tab.</li><li>Look in the first localhost folder, then scripts/app.ts</li><li>Put a breakpoint on the line with return.</li><li>Type in the boxes and confirm that the breakpoint hits in TypeScript code and that inspection works correctly.</li></ol><p><img src="`+h+'" alt="An image showing the debugger running the code you have just wrote"></p><p>Congrats you&#39;ve built your own .NET Core project with a TypeScript frontend.</p>',63),q=[f];function C(k,v,w,b,S,D){return n(),a("div",null,q)}const _=s(m,[["render",C]]);export{T as __pageData,_ as default};
