import{_ as s,o as a,c as n,V as l}from"./chunks/framework.ced88878.js";const d=JSON.parse('{"title":"Gulp","description":"","frontmatter":{"title":"Gulp","layout":"docs","permalink":"/docs/handbook/gulp.html","oneline":"Using TypeScript with Gulp","deprecated":true},"headers":[],"relativePath":"en/tutorials/Gulp.md","lastUpdated":1681915487000}'),p={name:"en/tutorials/Gulp.md"},o=l(`<p>This quick start guide will teach you how to build TypeScript with <a href="https://gulpjs.com" target="_blank" rel="noreferrer">gulp</a> and then add <a href="https://browserify.org" target="_blank" rel="noreferrer">Browserify</a>, <a href="https://terser.org" target="_blank" rel="noreferrer">terser</a>, or <a href="https://github.com/substack/watchify" target="_blank" rel="noreferrer">Watchify</a> to the gulp pipeline. This guide also shows how to add <a href="https://babeljs.io/" target="_blank" rel="noreferrer">Babel</a> functionality using <a href="https://github.com/babel/babelify" target="_blank" rel="noreferrer">Babelify</a>.</p><p>We assume that you&#39;re already using <a href="https://nodejs.org/" target="_blank" rel="noreferrer">Node.js</a> with <a href="https://www.npmjs.com/" target="_blank" rel="noreferrer">npm</a>.</p><h2 id="minimal-project" tabindex="-1">Minimal project <a class="header-anchor" href="#minimal-project" aria-label="Permalink to &quot;Minimal project&quot;">​</a></h2><p>Let&#39;s start out with a new directory. We&#39;ll name it <code>proj</code> for now, but you can change it to whatever you want.</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">mkdir </span><span style="color:#E7EE98;">proj</span></span>
<span class="line"><span style="color:#97E1F1;">cd</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">proj</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">mkdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">proj</span></span>
<span class="line"><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">proj</span></span></code></pre></div><p>To start, we&#39;re going to structure our project in the following way:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">proj/</span></span>
<span class="line"><span style="color:#f6f6f4;">   ├─ src/</span></span>
<span class="line"><span style="color:#f6f6f4;">   └─ dist/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">proj/</span></span>
<span class="line"><span style="color:#24292e;">   ├─ src/</span></span>
<span class="line"><span style="color:#24292e;">   └─ dist/</span></span></code></pre></div><p>TypeScript files will start out in your <code>src</code> folder, run through the TypeScript compiler and end up in <code>dist</code>.</p><p>Let&#39;s scaffold this out:</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">mkdir </span><span style="color:#E7EE98;">src</span></span>
<span class="line"><span style="color:#F6F6F4;">mkdir </span><span style="color:#E7EE98;">dist</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">mkdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">src</span></span>
<span class="line"><span style="color:#6F42C1;">mkdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">dist</span></span></code></pre></div><h2 id="initialize-the-project" tabindex="-1">Initialize the project <a class="header-anchor" href="#initialize-the-project" aria-label="Permalink to &quot;Initialize the project&quot;">​</a></h2><p>Now we&#39;ll turn this folder into an npm package.</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">npm </span><span style="color:#E7EE98;">init</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">init</span></span></code></pre></div><p>You&#39;ll be given a series of prompts. You can use the defaults except for your entry point. For your entry point, use <code>./dist/main.js</code>. You can always go back and change these in the <code>package.json</code> file that&#39;s been generated for you.</p><h2 id="install-our-dependencies" tabindex="-1">Install our dependencies <a class="header-anchor" href="#install-our-dependencies" aria-label="Permalink to &quot;Install our dependencies&quot;">​</a></h2><p>Now we can use <code>npm install</code> to install packages. First install <code>gulp-cli</code> globally (if you use a Unix system, you may need to prefix the <code>npm install</code> commands in this guide with <code>sudo</code>).</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">npm </span><span style="color:#E7EE98;">install</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">-g</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">gulp-cli</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-g</span><span style="color:#24292E;"> </span><span style="color:#032F62;">gulp-cli</span></span></code></pre></div><p>Then install <code>typescript</code>, <code>gulp</code> and <code>gulp-typescript</code> in your project&#39;s dev dependencies. <a href="https://www.npmjs.com/package/gulp-typescript" target="_blank" rel="noreferrer">Gulp-typescript</a> is a gulp plugin for TypeScript.</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">npm </span><span style="color:#E7EE98;">install</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">--save-dev</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">typescript</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">gulp@4.0.0</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">gulp-typescript</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--save-dev</span><span style="color:#24292E;"> </span><span style="color:#032F62;">typescript</span><span style="color:#24292E;"> </span><span style="color:#032F62;">gulp@4.0.0</span><span style="color:#24292E;"> </span><span style="color:#032F62;">gulp-typescript</span></span></code></pre></div><h2 id="write-a-simple-example" tabindex="-1">Write a simple example <a class="header-anchor" href="#write-a-simple-example" aria-label="Permalink to &quot;Write a simple example&quot;">​</a></h2><p>Let&#39;s write a Hello World program. In <code>src</code>, create the file <code>main.ts</code>:</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">hello</span><span style="color:#F6F6F4;">(</span><span style="color:#FFB86C;font-style:italic;">compiler</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">string</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">  console.</span><span style="color:#62E884;">log</span><span style="color:#F6F6F4;">(</span><span style="color:#E7EE98;">\`Hello from </span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">compiler</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;">\`</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"><span style="color:#62E884;">hello</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">TypeScript</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">hello</span><span style="color:#24292E;">(</span><span style="color:#E36209;">compiler</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`Hello from \${</span><span style="color:#24292E;">compiler</span><span style="color:#032F62;">}\`</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6F42C1;">hello</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;TypeScript&quot;</span><span style="color:#24292E;">);</span></span></code></pre></div><p>In the project root, <code>proj</code>, create the file <code>tsconfig.json</code>:</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">{</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">files</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> [</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">src/main.ts</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">],</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">compilerOptions</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">noImplicitAny</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">target</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">es5</span><span style="color:#DEE492;">&quot;</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;files&quot;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;src/main.ts&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;compilerOptions&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;noImplicitAny&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;target&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;es5&quot;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="create-a-gulpfile-js" tabindex="-1">Create a <code>gulpfile.js</code> <a class="header-anchor" href="#create-a-gulpfile-js" aria-label="Permalink to &quot;Create a \`gulpfile.js\`&quot;">​</a></h2><p>In the project root, create the file <code>gulpfile.js</code>:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> gulp </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">require</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">gulp</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> ts </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">require</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">gulp-typescript</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> tsProject </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> ts.</span><span style="color:#62E884;">createProject</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">tsconfig.json</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">gulp.</span><span style="color:#62E884;">task</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">default</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> () {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> tsProject.</span><span style="color:#62E884;">src</span><span style="color:#F6F6F4;">().</span><span style="color:#62E884;">pipe</span><span style="color:#F6F6F4;">(</span><span style="color:#62E884;">tsProject</span><span style="color:#F6F6F4;">()).js.</span><span style="color:#62E884;">pipe</span><span style="color:#F6F6F4;">(gulp.</span><span style="color:#62E884;">dest</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">dist</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">));</span></span>
<span class="line"><span style="color:#F6F6F4;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> gulp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;gulp&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> ts </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;gulp-typescript&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> tsProject </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ts.</span><span style="color:#6F42C1;">createProject</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;tsconfig.json&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">gulp.</span><span style="color:#6F42C1;">task</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;default&quot;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> tsProject.</span><span style="color:#6F42C1;">src</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">pipe</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">tsProject</span><span style="color:#24292E;">()).js.</span><span style="color:#6F42C1;">pipe</span><span style="color:#24292E;">(gulp.</span><span style="color:#6F42C1;">dest</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;dist&quot;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><h2 id="test-the-resulting-app" tabindex="-1">Test the resulting app <a class="header-anchor" href="#test-the-resulting-app" aria-label="Permalink to &quot;Test the resulting app&quot;">​</a></h2><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">gulp</span></span>
<span class="line"><span style="color:#F6F6F4;">node </span><span style="color:#E7EE98;">dist/main.js</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">gulp</span></span>
<span class="line"><span style="color:#6F42C1;">node</span><span style="color:#24292E;"> </span><span style="color:#032F62;">dist/main.js</span></span></code></pre></div><p>The program should print &quot;Hello from TypeScript!&quot;.</p><h2 id="add-modules-to-the-code" tabindex="-1">Add modules to the code <a class="header-anchor" href="#add-modules-to-the-code" aria-label="Permalink to &quot;Add modules to the code&quot;">​</a></h2><p>Before we get to Browserify, let&#39;s build our code out and add modules to the mix. This is the structure you&#39;re more likely to use for a real app.</p><p>Create a file called <code>src/greet.ts</code>:</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">export</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">sayHello</span><span style="color:#F6F6F4;">(</span><span style="color:#FFB86C;font-style:italic;">name</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">string</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">\`Hello from </span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">name</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;">\`</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">sayHello</span><span style="color:#24292E;">(</span><span style="color:#E36209;">name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`Hello from \${</span><span style="color:#24292E;">name</span><span style="color:#032F62;">}\`</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>Now change the code in <code>src/main.ts</code> to import <code>sayHello</code> from <code>greet.ts</code>:</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> { sayHello } </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">./greet</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">console.</span><span style="color:#62E884;">log</span><span style="color:#F6F6F4;">(</span><span style="color:#62E884;">sayHello</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">TypeScript</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">));</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { sayHello } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;./greet&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">sayHello</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;TypeScript&quot;</span><span style="color:#24292E;">));</span></span></code></pre></div><p>Finally, add <code>src/greet.ts</code> to <code>tsconfig.json</code>:</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">{</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">files</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> [</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">src/main.ts</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">src/greet.ts</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">],</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">compilerOptions</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">noImplicitAny</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">target</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">es5</span><span style="color:#DEE492;">&quot;</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;files&quot;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;src/main.ts&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;src/greet.ts&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;compilerOptions&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;noImplicitAny&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;target&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;es5&quot;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>Make sure that the modules work by running <code>gulp</code> and then testing in Node:</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">gulp</span></span>
<span class="line"><span style="color:#F6F6F4;">node </span><span style="color:#E7EE98;">dist/main.js</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">gulp</span></span>
<span class="line"><span style="color:#6F42C1;">node</span><span style="color:#24292E;"> </span><span style="color:#032F62;">dist/main.js</span></span></code></pre></div><p>Notice that even though we used ES2015 module syntax, TypeScript emitted CommonJS modules that Node uses. We&#39;ll stick with CommonJS for this tutorial, but you could set <code>module</code> in the options object to change this.</p><h2 id="browserify" tabindex="-1">Browserify <a class="header-anchor" href="#browserify" aria-label="Permalink to &quot;Browserify&quot;">​</a></h2><p>Now let&#39;s move this project from Node to the browser. To do this, we&#39;d like to bundle all our modules into one JavaScript file. Fortunately, that&#39;s exactly what Browserify does. Even better, it lets us use the CommonJS module system used by Node, which is the default TypeScript emit. That means our TypeScript and Node setup will transfer to the browser basically unchanged.</p><p>First, install browserify, <a href="https://www.npmjs.com/package/tsify" target="_blank" rel="noreferrer">tsify</a>, and vinyl-source-stream. tsify is a Browserify plugin that, like gulp-typescript, gives access to the TypeScript compiler. vinyl-source-stream lets us adapt the file output of Browserify back into a format that gulp understands called <a href="https://github.com/gulpjs/vinyl" target="_blank" rel="noreferrer">vinyl</a>.</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">npm </span><span style="color:#E7EE98;">install</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">--save-dev</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">browserify</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">tsify</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">vinyl-source-stream</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--save-dev</span><span style="color:#24292E;"> </span><span style="color:#032F62;">browserify</span><span style="color:#24292E;"> </span><span style="color:#032F62;">tsify</span><span style="color:#24292E;"> </span><span style="color:#032F62;">vinyl-source-stream</span></span></code></pre></div><h2 id="create-a-page" tabindex="-1">Create a page <a class="header-anchor" href="#create-a-page" aria-label="Permalink to &quot;Create a page&quot;">​</a></h2><p>Create a file in <code>src</code> named <code>index.html</code>:</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">&lt;!</span><span style="color:#F286C4;">DOCTYPE</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">html</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">&lt;</span><span style="color:#F286C4;">html</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">  &lt;</span><span style="color:#F286C4;">head</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">    &lt;</span><span style="color:#F286C4;">meta</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">charset</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">UTF-8</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;"> /&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">    &lt;</span><span style="color:#F286C4;">title</span><span style="color:#F6F6F4;">&gt;Hello World!&lt;/</span><span style="color:#F286C4;">title</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">  &lt;/</span><span style="color:#F286C4;">head</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">  &lt;</span><span style="color:#F286C4;">body</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">    &lt;</span><span style="color:#F286C4;">p</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">id</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">greeting</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">&gt;Loading ...&lt;/</span><span style="color:#F286C4;">p</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">    &lt;</span><span style="color:#F286C4;">script</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">src</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">bundle.js</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">&gt;&lt;/</span><span style="color:#F286C4;">script</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">  &lt;/</span><span style="color:#F286C4;">body</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">&lt;/</span><span style="color:#F286C4;">html</span><span style="color:#F6F6F4;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;!</span><span style="color:#22863A;">DOCTYPE</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">html</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">html</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">head</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">meta</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">charset</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;UTF-8&quot;</span><span style="color:#24292E;"> /&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">title</span><span style="color:#24292E;">&gt;Hello World!&lt;/</span><span style="color:#22863A;">title</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;/</span><span style="color:#22863A;">head</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">body</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">p</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;greeting&quot;</span><span style="color:#24292E;">&gt;Loading ...&lt;/</span><span style="color:#22863A;">p</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">script</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">src</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;bundle.js&quot;</span><span style="color:#24292E;">&gt;&lt;/</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;/</span><span style="color:#22863A;">body</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">html</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p>Now change <code>main.ts</code> to update the page:</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> { sayHello } </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">./greet</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">showHello</span><span style="color:#F6F6F4;">(</span><span style="color:#FFB86C;font-style:italic;">divName</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">string</span><span style="color:#F6F6F4;">, </span><span style="color:#FFB86C;font-style:italic;">name</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">string</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> elt </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> document.</span><span style="color:#62E884;">getElementById</span><span style="color:#F6F6F4;">(divName);</span></span>
<span class="line"><span style="color:#F6F6F4;">  elt.innerText </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">sayHello</span><span style="color:#F6F6F4;">(name);</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#62E884;">showHello</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">greeting</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">TypeScript</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { sayHello } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;./greet&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">showHello</span><span style="color:#24292E;">(</span><span style="color:#E36209;">divName</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">, </span><span style="color:#E36209;">name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">elt</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> document.</span><span style="color:#6F42C1;">getElementById</span><span style="color:#24292E;">(divName);</span></span>
<span class="line"><span style="color:#24292E;">  elt.innerText </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">sayHello</span><span style="color:#24292E;">(name);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">showHello</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;greeting&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;TypeScript&quot;</span><span style="color:#24292E;">);</span></span></code></pre></div><p>Calling <code>showHello</code> calls <code>sayHello</code> to change the paragraph&#39;s text. Now change your gulpfile to the following:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> gulp </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">require</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">gulp</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> browserify </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">require</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">browserify</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> source </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">require</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">vinyl-source-stream</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> tsify </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">require</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">tsify</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> paths </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  pages</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> [</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">src/*.html</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">],</span></span>
<span class="line"><span style="color:#F6F6F4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">gulp.</span><span style="color:#62E884;">task</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">copy-html</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> () {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> gulp.</span><span style="color:#62E884;">src</span><span style="color:#F6F6F4;">(paths.pages).</span><span style="color:#62E884;">pipe</span><span style="color:#F6F6F4;">(gulp.</span><span style="color:#62E884;">dest</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">dist</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">));</span></span>
<span class="line"><span style="color:#F6F6F4;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">gulp.</span><span style="color:#62E884;">task</span><span style="color:#F6F6F4;">(</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">default</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  gulp.</span><span style="color:#62E884;">series</span><span style="color:#F6F6F4;">(gulp.</span><span style="color:#62E884;">parallel</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">copy-html</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">), </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> () {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">browserify</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">      basedir</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">.</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      debug</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      entries</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> [</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">src/main.ts</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">],</span></span>
<span class="line"><span style="color:#F6F6F4;">      cache</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {},</span></span>
<span class="line"><span style="color:#F6F6F4;">      packageCache</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {},</span></span>
<span class="line"><span style="color:#F6F6F4;">    })</span></span>
<span class="line"><span style="color:#F6F6F4;">      .</span><span style="color:#62E884;">plugin</span><span style="color:#F6F6F4;">(tsify)</span></span>
<span class="line"><span style="color:#F6F6F4;">      .</span><span style="color:#62E884;">bundle</span><span style="color:#F6F6F4;">()</span></span>
<span class="line"><span style="color:#F6F6F4;">      .</span><span style="color:#62E884;">pipe</span><span style="color:#F6F6F4;">(</span><span style="color:#62E884;">source</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">bundle.js</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">))</span></span>
<span class="line"><span style="color:#F6F6F4;">      .</span><span style="color:#62E884;">pipe</span><span style="color:#F6F6F4;">(gulp.</span><span style="color:#62E884;">dest</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">dist</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">));</span></span>
<span class="line"><span style="color:#F6F6F4;">  })</span></span>
<span class="line"><span style="color:#F6F6F4;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> gulp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;gulp&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> browserify </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;browserify&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> source </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;vinyl-source-stream&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> tsify </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;tsify&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> paths </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  pages: [</span><span style="color:#032F62;">&quot;src/*.html&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">gulp.</span><span style="color:#6F42C1;">task</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;copy-html&quot;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> gulp.</span><span style="color:#6F42C1;">src</span><span style="color:#24292E;">(paths.pages).</span><span style="color:#6F42C1;">pipe</span><span style="color:#24292E;">(gulp.</span><span style="color:#6F42C1;">dest</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;dist&quot;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">gulp.</span><span style="color:#6F42C1;">task</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;default&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  gulp.</span><span style="color:#6F42C1;">series</span><span style="color:#24292E;">(gulp.</span><span style="color:#6F42C1;">parallel</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;copy-html&quot;</span><span style="color:#24292E;">), </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">browserify</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">      basedir: </span><span style="color:#032F62;">&quot;.&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      debug: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      entries: [</span><span style="color:#032F62;">&quot;src/main.ts&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">      cache: {},</span></span>
<span class="line"><span style="color:#24292E;">      packageCache: {},</span></span>
<span class="line"><span style="color:#24292E;">    })</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">plugin</span><span style="color:#24292E;">(tsify)</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">bundle</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">pipe</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">source</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;bundle.js&quot;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">pipe</span><span style="color:#24292E;">(gulp.</span><span style="color:#6F42C1;">dest</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;dist&quot;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">  })</span></span>
<span class="line"><span style="color:#24292E;">);</span></span></code></pre></div><p>This adds the <code>copy-html</code> task and adds it as a dependency of <code>default</code>. That means any time <code>default</code> is run, <code>copy-html</code> has to run first. We&#39;ve also changed <code>default</code> to call Browserify with the tsify plugin instead of gulp-typescript. Conveniently, they both allow us to pass the same options object to the TypeScript compiler.</p><p>After calling <code>bundle</code> we use <code>source</code> (our alias for vinyl-source-stream) to name our output bundle <code>bundle.js</code>.</p><p>Test the page by running gulp and then opening <code>dist/index.html</code> in a browser. You should see &quot;Hello from TypeScript&quot; on the page.</p><p>Notice that we specified <code>debug: true</code> to Browserify. This causes tsify to emit source maps inside the bundled JavaScript file. Source maps let you debug your original TypeScript code in the browser instead of the bundled JavaScript. You can test that source maps are working by opening the debugger for your browser and putting a breakpoint inside <code>main.ts</code>. When you refresh the page the breakpoint should pause the page and let you debug <code>greet.ts</code>.</p><h2 id="watchify-babel-and-terser" tabindex="-1">Watchify, Babel, and Terser <a class="header-anchor" href="#watchify-babel-and-terser" aria-label="Permalink to &quot;Watchify, Babel, and Terser&quot;">​</a></h2><p>Now that we are bundling our code with Browserify and tsify, we can add various features to our build with browserify plugins.</p><ul><li><p>Watchify starts gulp and keeps it running, incrementally compiling whenever you save a file. This lets you keep an edit-save-refresh cycle going in the browser.</p></li><li><p>Babel is a hugely flexible compiler that converts ES2015 and beyond into ES5 and ES3. This lets you add extensive and customized transformations that TypeScript doesn&#39;t support.</p></li><li><p>Terser compacts your code so that it takes less time to download.</p></li></ul><h2 id="watchify" tabindex="-1">Watchify <a class="header-anchor" href="#watchify" aria-label="Permalink to &quot;Watchify&quot;">​</a></h2><p>We&#39;ll start with Watchify to provide background compilation:</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">npm </span><span style="color:#E7EE98;">install</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">--save-dev</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">watchify</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">fancy-log</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--save-dev</span><span style="color:#24292E;"> </span><span style="color:#032F62;">watchify</span><span style="color:#24292E;"> </span><span style="color:#032F62;">fancy-log</span></span></code></pre></div><p>Now change your gulpfile to the following:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> gulp </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">require</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">gulp</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> browserify </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">require</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">browserify</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> source </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">require</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">vinyl-source-stream</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> watchify </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">require</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">watchify</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> tsify </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">require</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">tsify</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> fancy_log </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">require</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">fancy-log</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> paths </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  pages</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> [</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">src/*.html</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">],</span></span>
<span class="line"><span style="color:#F6F6F4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> watchedBrowserify </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">watchify</span><span style="color:#F6F6F4;">(</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#62E884;">browserify</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">    basedir</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">.</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    debug</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    entries</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> [</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">src/main.ts</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">],</span></span>
<span class="line"><span style="color:#F6F6F4;">    cache</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {},</span></span>
<span class="line"><span style="color:#F6F6F4;">    packageCache</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {},</span></span>
<span class="line"><span style="color:#F6F6F4;">  }).</span><span style="color:#62E884;">plugin</span><span style="color:#F6F6F4;">(tsify)</span></span>
<span class="line"><span style="color:#F6F6F4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">gulp.</span><span style="color:#62E884;">task</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">copy-html</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> () {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> gulp.</span><span style="color:#62E884;">src</span><span style="color:#F6F6F4;">(paths.pages).</span><span style="color:#62E884;">pipe</span><span style="color:#F6F6F4;">(gulp.</span><span style="color:#62E884;">dest</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">dist</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">));</span></span>
<span class="line"><span style="color:#F6F6F4;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">bundle</span><span style="color:#F6F6F4;">() {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> watchedBrowserify</span></span>
<span class="line"><span style="color:#F6F6F4;">    .</span><span style="color:#62E884;">bundle</span><span style="color:#F6F6F4;">()</span></span>
<span class="line"><span style="color:#F6F6F4;">    .</span><span style="color:#62E884;">on</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">error</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, fancy_log)</span></span>
<span class="line"><span style="color:#F6F6F4;">    .</span><span style="color:#62E884;">pipe</span><span style="color:#F6F6F4;">(</span><span style="color:#62E884;">source</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">bundle.js</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">))</span></span>
<span class="line"><span style="color:#F6F6F4;">    .</span><span style="color:#62E884;">pipe</span><span style="color:#F6F6F4;">(gulp.</span><span style="color:#62E884;">dest</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">dist</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">));</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">gulp.</span><span style="color:#62E884;">task</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">default</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, gulp.</span><span style="color:#62E884;">series</span><span style="color:#F6F6F4;">(gulp.</span><span style="color:#62E884;">parallel</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">copy-html</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">), bundle));</span></span>
<span class="line"><span style="color:#F6F6F4;">watchedBrowserify.</span><span style="color:#62E884;">on</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">update</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, bundle);</span></span>
<span class="line"><span style="color:#F6F6F4;">watchedBrowserify.</span><span style="color:#62E884;">on</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">log</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, fancy_log);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> gulp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;gulp&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> browserify </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;browserify&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> source </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;vinyl-source-stream&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> watchify </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;watchify&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> tsify </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;tsify&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> fancy_log </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;fancy-log&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> paths </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  pages: [</span><span style="color:#032F62;">&quot;src/*.html&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> watchedBrowserify </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">watchify</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">browserify</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">    basedir: </span><span style="color:#032F62;">&quot;.&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    debug: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    entries: [</span><span style="color:#032F62;">&quot;src/main.ts&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">    cache: {},</span></span>
<span class="line"><span style="color:#24292E;">    packageCache: {},</span></span>
<span class="line"><span style="color:#24292E;">  }).</span><span style="color:#6F42C1;">plugin</span><span style="color:#24292E;">(tsify)</span></span>
<span class="line"><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">gulp.</span><span style="color:#6F42C1;">task</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;copy-html&quot;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> gulp.</span><span style="color:#6F42C1;">src</span><span style="color:#24292E;">(paths.pages).</span><span style="color:#6F42C1;">pipe</span><span style="color:#24292E;">(gulp.</span><span style="color:#6F42C1;">dest</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;dist&quot;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">bundle</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> watchedBrowserify</span></span>
<span class="line"><span style="color:#24292E;">    .</span><span style="color:#6F42C1;">bundle</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">    .</span><span style="color:#6F42C1;">on</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;error&quot;</span><span style="color:#24292E;">, fancy_log)</span></span>
<span class="line"><span style="color:#24292E;">    .</span><span style="color:#6F42C1;">pipe</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">source</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;bundle.js&quot;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">    .</span><span style="color:#6F42C1;">pipe</span><span style="color:#24292E;">(gulp.</span><span style="color:#6F42C1;">dest</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;dist&quot;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">gulp.</span><span style="color:#6F42C1;">task</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;default&quot;</span><span style="color:#24292E;">, gulp.</span><span style="color:#6F42C1;">series</span><span style="color:#24292E;">(gulp.</span><span style="color:#6F42C1;">parallel</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;copy-html&quot;</span><span style="color:#24292E;">), bundle));</span></span>
<span class="line"><span style="color:#24292E;">watchedBrowserify.</span><span style="color:#6F42C1;">on</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;update&quot;</span><span style="color:#24292E;">, bundle);</span></span>
<span class="line"><span style="color:#24292E;">watchedBrowserify.</span><span style="color:#6F42C1;">on</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;log&quot;</span><span style="color:#24292E;">, fancy_log);</span></span></code></pre></div><p>There are basically three changes here, but they require you to refactor your code a bit.</p><ol><li>We wrapped our <code>browserify</code> instance in a call to <code>watchify</code>, and then held on to the result.</li><li>We called <code>watchedBrowserify.on(&#39;update&#39;, bundle);</code> so that Browserify will run the <code>bundle</code> function every time one of your TypeScript files changes.</li><li>We called <code>watchedBrowserify.on(&#39;log&#39;, fancy_log);</code> to log to the console.</li></ol><p>Together (1) and (2) mean that we have to move our call to <code>browserify</code> out of the <code>default</code> task. And we have to give the function for <code>default</code> a name since both Watchify and Gulp need to call it. Adding logging with (3) is optional but very useful for debugging your setup.</p><p>Now when you run Gulp, it should start and stay running. Try changing the code for <code>showHello</code> in <code>main.ts</code> and saving it. You should see output that looks like this:</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">proj$ </span><span style="color:#E7EE98;">gulp</span></span>
<span class="line"><span style="color:#F6F6F4;">[</span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;">:</span><span style="color:#BF9EEE;">34</span><span style="color:#F6F6F4;">:</span><span style="color:#BF9EEE;">20</span><span style="color:#F6F6F4;">] Using gulpfile </span><span style="color:#F286C4;">~</span><span style="color:#F6F6F4;">/src/proj/gulpfile.js</span></span>
<span class="line"><span style="color:#F6F6F4;">[</span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;">:</span><span style="color:#BF9EEE;">34</span><span style="color:#F6F6F4;">:</span><span style="color:#BF9EEE;">20</span><span style="color:#F6F6F4;">] Starting </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">copy-html</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">...</span></span>
<span class="line"><span style="color:#F6F6F4;">[</span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;">:</span><span style="color:#BF9EEE;">34</span><span style="color:#F6F6F4;">:</span><span style="color:#BF9EEE;">20</span><span style="color:#F6F6F4;">] Finished </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">copy-html</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;"> after </span><span style="color:#BF9EEE;">26</span><span style="color:#F6F6F4;"> ms</span></span>
<span class="line"><span style="color:#F6F6F4;">[</span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;">:</span><span style="color:#BF9EEE;">34</span><span style="color:#F6F6F4;">:</span><span style="color:#BF9EEE;">20</span><span style="color:#F6F6F4;">] Starting </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">default</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">...</span></span>
<span class="line"><span style="color:#F6F6F4;">[</span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;">:</span><span style="color:#BF9EEE;">34</span><span style="color:#F6F6F4;">:</span><span style="color:#BF9EEE;">21</span><span style="color:#F6F6F4;">] </span><span style="color:#BF9EEE;">2824</span><span style="color:#F6F6F4;"> bytes written (</span><span style="color:#BF9EEE;">0.13</span><span style="color:#F6F6F4;"> seconds)</span></span>
<span class="line"><span style="color:#F6F6F4;">[</span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;">:</span><span style="color:#BF9EEE;">34</span><span style="color:#F6F6F4;">:</span><span style="color:#BF9EEE;">21</span><span style="color:#F6F6F4;">] Finished </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">default</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;"> after </span><span style="color:#BF9EEE;">1.36</span><span style="color:#F6F6F4;"> s</span></span>
<span class="line"><span style="color:#F6F6F4;">[</span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;">:</span><span style="color:#BF9EEE;">35</span><span style="color:#F6F6F4;">:</span><span style="color:#BF9EEE;">22</span><span style="color:#F6F6F4;">] </span><span style="color:#BF9EEE;">2261</span><span style="color:#F6F6F4;"> bytes written (</span><span style="color:#BF9EEE;">0.02</span><span style="color:#F6F6F4;"> seconds)</span></span>
<span class="line"><span style="color:#F6F6F4;">[</span><span style="color:#BF9EEE;">10</span><span style="color:#F6F6F4;">:</span><span style="color:#BF9EEE;">35</span><span style="color:#F6F6F4;">:</span><span style="color:#BF9EEE;">24</span><span style="color:#F6F6F4;">] </span><span style="color:#BF9EEE;">2808</span><span style="color:#F6F6F4;"> bytes written (</span><span style="color:#BF9EEE;">0.05</span><span style="color:#F6F6F4;"> seconds)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">proj$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">gulp</span></span>
<span class="line"><span style="color:#24292E;">[</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">34</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">20</span><span style="color:#24292E;">] Using gulpfile </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">/src/proj/gulpfile.js</span></span>
<span class="line"><span style="color:#24292E;">[</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">34</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">20</span><span style="color:#24292E;">] Starting </span><span style="color:#032F62;">&#39;copy-html&#39;</span><span style="color:#24292E;">...</span></span>
<span class="line"><span style="color:#24292E;">[</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">34</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">20</span><span style="color:#24292E;">] Finished </span><span style="color:#032F62;">&#39;copy-html&#39;</span><span style="color:#24292E;"> after </span><span style="color:#005CC5;">26</span><span style="color:#24292E;"> ms</span></span>
<span class="line"><span style="color:#24292E;">[</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">34</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">20</span><span style="color:#24292E;">] Starting </span><span style="color:#032F62;">&#39;default&#39;</span><span style="color:#24292E;">...</span></span>
<span class="line"><span style="color:#24292E;">[</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">34</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">21</span><span style="color:#24292E;">] </span><span style="color:#005CC5;">2824</span><span style="color:#24292E;"> bytes written (</span><span style="color:#005CC5;">0.13</span><span style="color:#24292E;"> seconds)</span></span>
<span class="line"><span style="color:#24292E;">[</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">34</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">21</span><span style="color:#24292E;">] Finished </span><span style="color:#032F62;">&#39;default&#39;</span><span style="color:#24292E;"> after </span><span style="color:#005CC5;">1.36</span><span style="color:#24292E;"> s</span></span>
<span class="line"><span style="color:#24292E;">[</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">35</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">22</span><span style="color:#24292E;">] </span><span style="color:#005CC5;">2261</span><span style="color:#24292E;"> bytes written (</span><span style="color:#005CC5;">0.02</span><span style="color:#24292E;"> seconds)</span></span>
<span class="line"><span style="color:#24292E;">[</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">35</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">24</span><span style="color:#24292E;">] </span><span style="color:#005CC5;">2808</span><span style="color:#24292E;"> bytes written (</span><span style="color:#005CC5;">0.05</span><span style="color:#24292E;"> seconds)</span></span></code></pre></div><h2 id="terser" tabindex="-1">Terser <a class="header-anchor" href="#terser" aria-label="Permalink to &quot;Terser&quot;">​</a></h2><p>First install Terser. Since the point of Terser is to mangle your code, we also need to install vinyl-buffer and gulp-sourcemaps to keep sourcemaps working.</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">npm </span><span style="color:#E7EE98;">install</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">--save-dev</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">gulp-terser</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">vinyl-buffer</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">gulp-sourcemaps</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--save-dev</span><span style="color:#24292E;"> </span><span style="color:#032F62;">gulp-terser</span><span style="color:#24292E;"> </span><span style="color:#032F62;">vinyl-buffer</span><span style="color:#24292E;"> </span><span style="color:#032F62;">gulp-sourcemaps</span></span></code></pre></div><p>Now change your gulpfile to the following:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> gulp </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">require</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">gulp</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> browserify </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">require</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">browserify</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> source </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">require</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">vinyl-source-stream</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> terser </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">require</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">gulp-terser</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> tsify </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">require</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">tsify</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> sourcemaps </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">require</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">gulp-sourcemaps</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> buffer </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">require</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">vinyl-buffer</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> paths </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  pages</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> [</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">src/*.html</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">],</span></span>
<span class="line"><span style="color:#F6F6F4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">gulp.</span><span style="color:#62E884;">task</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">copy-html</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> () {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> gulp.</span><span style="color:#62E884;">src</span><span style="color:#F6F6F4;">(paths.pages).</span><span style="color:#62E884;">pipe</span><span style="color:#F6F6F4;">(gulp.</span><span style="color:#62E884;">dest</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">dist</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">));</span></span>
<span class="line"><span style="color:#F6F6F4;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">gulp.</span><span style="color:#62E884;">task</span><span style="color:#F6F6F4;">(</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">default</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  gulp.</span><span style="color:#62E884;">series</span><span style="color:#F6F6F4;">(gulp.</span><span style="color:#62E884;">parallel</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">copy-html</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">), </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> () {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">browserify</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">      basedir</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">.</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      debug</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      entries</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> [</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">src/main.ts</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">],</span></span>
<span class="line"><span style="color:#F6F6F4;">      cache</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {},</span></span>
<span class="line"><span style="color:#F6F6F4;">      packageCache</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {},</span></span>
<span class="line"><span style="color:#F6F6F4;">    })</span></span>
<span class="line"><span style="color:#F6F6F4;">      .</span><span style="color:#62E884;">plugin</span><span style="color:#F6F6F4;">(tsify)</span></span>
<span class="line"><span style="color:#F6F6F4;">      .</span><span style="color:#62E884;">bundle</span><span style="color:#F6F6F4;">()</span></span>
<span class="line"><span style="color:#F6F6F4;">      .</span><span style="color:#62E884;">pipe</span><span style="color:#F6F6F4;">(</span><span style="color:#62E884;">source</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">bundle.js</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">))</span></span>
<span class="line"><span style="color:#F6F6F4;">      .</span><span style="color:#62E884;">pipe</span><span style="color:#F6F6F4;">(</span><span style="color:#62E884;">buffer</span><span style="color:#F6F6F4;">())</span></span>
<span class="line"><span style="color:#F6F6F4;">      .</span><span style="color:#62E884;">pipe</span><span style="color:#F6F6F4;">(sourcemaps.</span><span style="color:#62E884;">init</span><span style="color:#F6F6F4;">({ loadMaps</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;"> }))</span></span>
<span class="line"><span style="color:#F6F6F4;">      .</span><span style="color:#62E884;">pipe</span><span style="color:#F6F6F4;">(</span><span style="color:#62E884;">terser</span><span style="color:#F6F6F4;">())</span></span>
<span class="line"><span style="color:#F6F6F4;">      .</span><span style="color:#62E884;">pipe</span><span style="color:#F6F6F4;">(sourcemaps.</span><span style="color:#62E884;">write</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">./</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">))</span></span>
<span class="line"><span style="color:#F6F6F4;">      .</span><span style="color:#62E884;">pipe</span><span style="color:#F6F6F4;">(gulp.</span><span style="color:#62E884;">dest</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">dist</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">));</span></span>
<span class="line"><span style="color:#F6F6F4;">  })</span></span>
<span class="line"><span style="color:#F6F6F4;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> gulp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;gulp&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> browserify </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;browserify&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> source </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;vinyl-source-stream&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> terser </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;gulp-terser&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> tsify </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;tsify&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> sourcemaps </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;gulp-sourcemaps&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> buffer </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;vinyl-buffer&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> paths </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  pages: [</span><span style="color:#032F62;">&quot;src/*.html&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">gulp.</span><span style="color:#6F42C1;">task</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;copy-html&quot;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> gulp.</span><span style="color:#6F42C1;">src</span><span style="color:#24292E;">(paths.pages).</span><span style="color:#6F42C1;">pipe</span><span style="color:#24292E;">(gulp.</span><span style="color:#6F42C1;">dest</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;dist&quot;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">gulp.</span><span style="color:#6F42C1;">task</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;default&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  gulp.</span><span style="color:#6F42C1;">series</span><span style="color:#24292E;">(gulp.</span><span style="color:#6F42C1;">parallel</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;copy-html&quot;</span><span style="color:#24292E;">), </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">browserify</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">      basedir: </span><span style="color:#032F62;">&quot;.&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      debug: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      entries: [</span><span style="color:#032F62;">&quot;src/main.ts&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">      cache: {},</span></span>
<span class="line"><span style="color:#24292E;">      packageCache: {},</span></span>
<span class="line"><span style="color:#24292E;">    })</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">plugin</span><span style="color:#24292E;">(tsify)</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">bundle</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">pipe</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">source</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;bundle.js&quot;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">pipe</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">buffer</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">pipe</span><span style="color:#24292E;">(sourcemaps.</span><span style="color:#6F42C1;">init</span><span style="color:#24292E;">({ loadMaps: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;"> }))</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">pipe</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">terser</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">pipe</span><span style="color:#24292E;">(sourcemaps.</span><span style="color:#6F42C1;">write</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;./&quot;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">pipe</span><span style="color:#24292E;">(gulp.</span><span style="color:#6F42C1;">dest</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;dist&quot;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">  })</span></span>
<span class="line"><span style="color:#24292E;">);</span></span></code></pre></div><p>Notice that <code>terser</code> itself has just one call — the calls to <code>buffer</code> and <code>sourcemaps</code> exist to make sure sourcemaps keep working. These calls give us a separate sourcemap file instead of using inline sourcemaps like before. Now you can run Gulp and check that <code>bundle.js</code> does get minified into an unreadable mess:</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">gulp</span></span>
<span class="line"><span style="color:#F6F6F4;">cat </span><span style="color:#E7EE98;">dist/bundle.js</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">gulp</span></span>
<span class="line"><span style="color:#6F42C1;">cat</span><span style="color:#24292E;"> </span><span style="color:#032F62;">dist/bundle.js</span></span></code></pre></div><h2 id="babel" tabindex="-1">Babel <a class="header-anchor" href="#babel" aria-label="Permalink to &quot;Babel&quot;">​</a></h2><p>First install Babelify and the Babel preset for ES2015. Like Terser, Babelify mangles code, so we&#39;ll need vinyl-buffer and gulp-sourcemaps. By default Babelify will only process files with extensions of <code>.js</code>, <code>.es</code>, <code>.es6</code> and <code>.jsx</code> so we need to add the <code>.ts</code> extension as an option to Babelify.</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">npm </span><span style="color:#E7EE98;">install</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">--save-dev</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">babelify@</span><span style="color:#BF9EEE;">8</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">babel-core</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">babel-preset-es2015</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">vinyl-buffer</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">gulp-sourcemaps</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--save-dev</span><span style="color:#24292E;"> </span><span style="color:#032F62;">babelify@</span><span style="color:#005CC5;">8</span><span style="color:#24292E;"> </span><span style="color:#032F62;">babel-core</span><span style="color:#24292E;"> </span><span style="color:#032F62;">babel-preset-es2015</span><span style="color:#24292E;"> </span><span style="color:#032F62;">vinyl-buffer</span><span style="color:#24292E;"> </span><span style="color:#032F62;">gulp-sourcemaps</span></span></code></pre></div><p>Now change your gulpfile to the following:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> gulp </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">require</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">gulp</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> browserify </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">require</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">browserify</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> source </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">require</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">vinyl-source-stream</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> tsify </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">require</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">tsify</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> sourcemaps </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">require</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">gulp-sourcemaps</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> buffer </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">require</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">vinyl-buffer</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> paths </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  pages</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> [</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">src/*.html</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">],</span></span>
<span class="line"><span style="color:#F6F6F4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">gulp.</span><span style="color:#62E884;">task</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">copy-html</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> () {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> gulp.</span><span style="color:#62E884;">src</span><span style="color:#F6F6F4;">(paths.pages).</span><span style="color:#62E884;">pipe</span><span style="color:#F6F6F4;">(gulp.</span><span style="color:#62E884;">dest</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">dist</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">));</span></span>
<span class="line"><span style="color:#F6F6F4;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">gulp.</span><span style="color:#62E884;">task</span><span style="color:#F6F6F4;">(</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">default</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  gulp.</span><span style="color:#62E884;">series</span><span style="color:#F6F6F4;">(gulp.</span><span style="color:#62E884;">parallel</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">copy-html</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">), </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> () {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">browserify</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">      basedir</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">.</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      debug</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">      entries</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> [</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">src/main.ts</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">],</span></span>
<span class="line"><span style="color:#F6F6F4;">      cache</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {},</span></span>
<span class="line"><span style="color:#F6F6F4;">      packageCache</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {},</span></span>
<span class="line"><span style="color:#F6F6F4;">    })</span></span>
<span class="line"><span style="color:#F6F6F4;">      .</span><span style="color:#62E884;">plugin</span><span style="color:#F6F6F4;">(tsify)</span></span>
<span class="line"><span style="color:#F6F6F4;">      .</span><span style="color:#62E884;">transform</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">babelify</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, {</span></span>
<span class="line"><span style="color:#F6F6F4;">        presets</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> [</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">es2015</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">],</span></span>
<span class="line"><span style="color:#F6F6F4;">        extensions</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> [</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">.ts</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">],</span></span>
<span class="line"><span style="color:#F6F6F4;">      })</span></span>
<span class="line"><span style="color:#F6F6F4;">      .</span><span style="color:#62E884;">bundle</span><span style="color:#F6F6F4;">()</span></span>
<span class="line"><span style="color:#F6F6F4;">      .</span><span style="color:#62E884;">pipe</span><span style="color:#F6F6F4;">(</span><span style="color:#62E884;">source</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">bundle.js</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">))</span></span>
<span class="line"><span style="color:#F6F6F4;">      .</span><span style="color:#62E884;">pipe</span><span style="color:#F6F6F4;">(</span><span style="color:#62E884;">buffer</span><span style="color:#F6F6F4;">())</span></span>
<span class="line"><span style="color:#F6F6F4;">      .</span><span style="color:#62E884;">pipe</span><span style="color:#F6F6F4;">(sourcemaps.</span><span style="color:#62E884;">init</span><span style="color:#F6F6F4;">({ loadMaps</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;"> }))</span></span>
<span class="line"><span style="color:#F6F6F4;">      .</span><span style="color:#62E884;">pipe</span><span style="color:#F6F6F4;">(sourcemaps.</span><span style="color:#62E884;">write</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">./</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">))</span></span>
<span class="line"><span style="color:#F6F6F4;">      .</span><span style="color:#62E884;">pipe</span><span style="color:#F6F6F4;">(gulp.</span><span style="color:#62E884;">dest</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">dist</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">));</span></span>
<span class="line"><span style="color:#F6F6F4;">  })</span></span>
<span class="line"><span style="color:#F6F6F4;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> gulp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;gulp&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> browserify </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;browserify&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> source </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;vinyl-source-stream&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> tsify </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;tsify&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> sourcemaps </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;gulp-sourcemaps&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> buffer </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;vinyl-buffer&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> paths </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  pages: [</span><span style="color:#032F62;">&quot;src/*.html&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">gulp.</span><span style="color:#6F42C1;">task</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;copy-html&quot;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> gulp.</span><span style="color:#6F42C1;">src</span><span style="color:#24292E;">(paths.pages).</span><span style="color:#6F42C1;">pipe</span><span style="color:#24292E;">(gulp.</span><span style="color:#6F42C1;">dest</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;dist&quot;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">gulp.</span><span style="color:#6F42C1;">task</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;default&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  gulp.</span><span style="color:#6F42C1;">series</span><span style="color:#24292E;">(gulp.</span><span style="color:#6F42C1;">parallel</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;copy-html&quot;</span><span style="color:#24292E;">), </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">browserify</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">      basedir: </span><span style="color:#032F62;">&quot;.&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      debug: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      entries: [</span><span style="color:#032F62;">&quot;src/main.ts&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">      cache: {},</span></span>
<span class="line"><span style="color:#24292E;">      packageCache: {},</span></span>
<span class="line"><span style="color:#24292E;">    })</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">plugin</span><span style="color:#24292E;">(tsify)</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">transform</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;babelify&quot;</span><span style="color:#24292E;">, {</span></span>
<span class="line"><span style="color:#24292E;">        presets: [</span><span style="color:#032F62;">&quot;es2015&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">        extensions: [</span><span style="color:#032F62;">&quot;.ts&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">      })</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">bundle</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">pipe</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">source</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;bundle.js&quot;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">pipe</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">buffer</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">pipe</span><span style="color:#24292E;">(sourcemaps.</span><span style="color:#6F42C1;">init</span><span style="color:#24292E;">({ loadMaps: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;"> }))</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">pipe</span><span style="color:#24292E;">(sourcemaps.</span><span style="color:#6F42C1;">write</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;./&quot;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">pipe</span><span style="color:#24292E;">(gulp.</span><span style="color:#6F42C1;">dest</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;dist&quot;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">  })</span></span>
<span class="line"><span style="color:#24292E;">);</span></span></code></pre></div><p>We also need to have TypeScript target ES2015. Babel will then produce ES5 from the ES2015 code that TypeScript emits. Let&#39;s modify <code>tsconfig.json</code>:</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">{</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">files</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> [</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">src/main.ts</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">],</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">compilerOptions</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">noImplicitAny</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">target</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">es2015</span><span style="color:#DEE492;">&quot;</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;files&quot;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;src/main.ts&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;compilerOptions&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;noImplicitAny&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;target&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;es2015&quot;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>Babel&#39;s ES5 output should be very similar to TypeScript&#39;s output for such a simple script.</p>`,84),e=[o];function t(c,r,y,F,E,i){return a(),n("div",null,e)}const h=s(p,[["render",t]]);export{d as __pageData,h as default};
