import{_ as s,o as a,c as o,V as e}from"./chunks/framework.ced88878.js";const F=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"en/declaration-files/Consumption.md","lastUpdated":1682670826000}'),n={name:"en/declaration-files/Consumption.md"},l=e(`<h2 id="downloading" tabindex="-1">Downloading <a class="header-anchor" href="#downloading" aria-label="Permalink to &quot;Downloading&quot;">​</a></h2><p>Getting type declarations requires no tools apart from npm.</p><p>As an example, getting the declarations for a library like lodash takes nothing more than the following command</p><div class="language-cmd"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">npm install </span><span style="color:#F286C4;">--</span><span style="color:#F6F6F4;">save</span><span style="color:#F286C4;">-</span><span style="color:#F6F6F4;">dev @types/lodash</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">npm install </span><span style="color:#D73A49;">--</span><span style="color:#24292E;">save</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">dev @types/lodash</span></span></code></pre></div><p>It is worth noting that if the npm package already includes its declaration file as described in <a href="/tsdoc-vitepress/docs/handbook/declaration-files/publishing.html">Publishing</a>, downloading the corresponding <code>@types</code> package is not needed.</p><h2 id="consuming" tabindex="-1">Consuming <a class="header-anchor" href="#consuming" aria-label="Permalink to &quot;Consuming&quot;">​</a></h2><p>From there you’ll be able to use lodash in your TypeScript code with no fuss. This works for both modules and global code.</p><p>For example, once you’ve <code>npm install</code>-ed your type declarations, you can use imports and write</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">*</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">as</span><span style="color:#F6F6F4;"> _ </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">lodash</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">_.</span><span style="color:#62E884;">padStart</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">Hello TypeScript!</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">20</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> _ </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;lodash&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">_.</span><span style="color:#6F42C1;">padStart</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Hello TypeScript!&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">20</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot; &quot;</span><span style="color:#24292E;">);</span></span></code></pre></div><p>or if you’re not using modules, you can just use the global variable <code>_</code>.</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">_.</span><span style="color:#62E884;">padStart</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">Hello TypeScript!</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;">20</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">_.</span><span style="color:#6F42C1;">padStart</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Hello TypeScript!&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">20</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot; &quot;</span><span style="color:#24292E;">);</span></span></code></pre></div><h2 id="searching" tabindex="-1">Searching <a class="header-anchor" href="#searching" aria-label="Permalink to &quot;Searching&quot;">​</a></h2><p>For the most part, type declaration packages should always have the same name as the package name on <code>npm</code>, but prefixed with <code>@types/</code>, but if you need, you can use the <a href="https://yarnpkg.com/" target="_blank" rel="noreferrer">Yarn package search</a> to find the package for your favorite library.</p><blockquote><p>Note: if the declaration file you are searching for is not present, you can always contribute one back and help out the next developer looking for it. Please see the DefinitelyTyped <a href="https://definitelytyped.org/guides/contributing.html" target="_blank" rel="noreferrer">contribution guidelines page</a> for details.</p></blockquote>`,14),t=[l];function p(r,c,i,d,y,u){return a(),o("div",null,t)}const E=s(n,[["render",p]]);export{F as __pageData,E as default};
