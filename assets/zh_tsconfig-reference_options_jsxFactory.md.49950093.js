import{_ as s,o as a,c as n,V as o}from"./chunks/framework.ced88878.js";const E=JSON.parse(`{"title":"","description":"","frontmatter":{"display":"JSX Factory","oneline":"Specify the JSX factory function used when targeting React JSX emit, e.g. 'React.createElement' or 'h'."},"headers":[],"relativePath":"zh/tsconfig-reference/options/jsxFactory.md","lastUpdated":1682921420000}`),l={name:"zh/tsconfig-reference/options/jsxFactory.md"},p=o(`<p>Changes the function called in <code>.js</code> files when compiling JSX Elements using the classic JSX runtime. The most common change is to use <code>&quot;h&quot;</code> or <code>&quot;preact.h&quot;</code> instead of the default <code>&quot;React.createElement&quot;</code> if using <code>preact</code>.</p><p>For example, this TSX file:</p><div class="language-tsx"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> { h } </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">preact</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">HelloWorld</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> () </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> &lt;</span><span style="color:#F286C4;">div</span><span style="color:#F6F6F4;">&gt;Hello&lt;/</span><span style="color:#F286C4;">div</span><span style="color:#F6F6F4;">&gt;;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { h } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;preact&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">HelloWorld</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> &lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;Hello&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;;</span></span></code></pre></div><p>With <code>jsxFactory: &quot;h&quot;</code> looks like:</p><div class="language-tsx"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">// @showEmit</span></span>
<span class="line"><span style="color:#7B7F8B;">// @showEmittedFile: index.js</span></span>
<span class="line"><span style="color:#7B7F8B;">// @jsxFactory: h</span></span>
<span class="line"><span style="color:#7B7F8B;">// @noErrors</span></span>
<span class="line"><span style="color:#7B7F8B;">// @target: esnext</span></span>
<span class="line"><span style="color:#7B7F8B;">// @module: commonjs</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> { h, Fragment } </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">preact</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">HelloWorld</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> () </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> &lt;</span><span style="color:#F286C4;">div</span><span style="color:#F6F6F4;">&gt;Hello&lt;/</span><span style="color:#F286C4;">div</span><span style="color:#F6F6F4;">&gt;;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// @showEmit</span></span>
<span class="line"><span style="color:#6A737D;">// @showEmittedFile: index.js</span></span>
<span class="line"><span style="color:#6A737D;">// @jsxFactory: h</span></span>
<span class="line"><span style="color:#6A737D;">// @noErrors</span></span>
<span class="line"><span style="color:#6A737D;">// @target: esnext</span></span>
<span class="line"><span style="color:#6A737D;">// @module: commonjs</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { h, Fragment } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;preact&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">HelloWorld</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> &lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;Hello&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;;</span></span></code></pre></div><p>This option can be used on a per-file basis too similar to <a href="https://babeljs.io/docs/en/babel-plugin-transform-react-jsx#custom" target="_blank" rel="noreferrer">Babel&#39;s <code>/** @jsx h */</code> directive</a>.</p><div class="language-tsx"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">/** </span><span style="color:#F286C4;">@jsx</span><span style="color:#7B7F8B;"> h */</span></span>
<span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> { h } </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">preact</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">HelloWorld</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> () </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> &lt;</span><span style="color:#F286C4;">div</span><span style="color:#F6F6F4;">&gt;Hello&lt;/</span><span style="color:#F286C4;">div</span><span style="color:#F6F6F4;">&gt;;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/** </span><span style="color:#D73A49;">@jsx</span><span style="color:#6A737D;"> h */</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { h } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;preact&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">HelloWorld</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> &lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;Hello&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;;</span></span></code></pre></div><p>The factory chosen will also affect where the <code>JSX</code> namespace is looked up (for type checking information) before falling back to the global one.</p><p>If the factory is defined as <code>React.createElement</code> (the default), the compiler will check for <code>React.JSX</code> before checking for a global <code>JSX</code>. If the factory is defined as <code>h</code>, it will check for <code>h.JSX</code> before a global <code>JSX</code>.</p>`,9),e=[p];function t(c,r,i,y,F,d){return a(),n("div",null,e)}const g=s(l,[["render",t]]);export{E as __pageData,g as default};
