import{_ as s,o as n,c as a,V as l}from"./chunks/framework.ced88878.js";const d=JSON.parse('{"title":"ASP.NET Core","description":"","frontmatter":{},"headers":[],"relativePath":"zh/tutorials/ASP.NET Core.md","lastUpdated":1682670826000}'),p={name:"zh/tutorials/ASP.NET Core.md"},o=l(`<h1 id="asp-net-core" tabindex="-1">ASP.NET Core <a class="header-anchor" href="#asp-net-core" aria-label="Permalink to &quot;ASP.NET Core&quot;">​</a></h1><h2 id="asp-net-core-1" tabindex="-1">ASP.NET Core <a class="header-anchor" href="#asp-net-core-1" aria-label="Permalink to &quot;ASP.NET Core&quot;">​</a></h2><h3 id="安装-asp-net-core-和-typescript" tabindex="-1">安装 ASP.NET Core 和 TypeScript <a class="header-anchor" href="#安装-asp-net-core-和-typescript" aria-label="Permalink to &quot;安装 ASP.NET Core 和 TypeScript&quot;">​</a></h3><p>首先，若有需要请<a href="https://get.asp.net" target="_blank" rel="noreferrer">安装 ASP.NET Core</a>。此篇指南需要使用Visual Studio 2015或2017。</p><p>其次，如果你的Visual Studio不带有最新版本的TypeScript，你可以从<a href="http://www.microsoft.com/en-us/download/details.aspx?id=48593" target="_blank" rel="noreferrer">这里</a>安装。</p><h3 id="新建工程" tabindex="-1">新建工程 <a class="header-anchor" href="#新建工程" aria-label="Permalink to &quot;新建工程&quot;">​</a></h3><ol><li><p>选择 <strong>File</strong></p></li><li><p>选择 <strong>New Project</strong> （Ctrl + Shift + N）</p></li><li><p>选择 <strong>Visual C#</strong></p></li><li><p>若使用VS2015，选择 <strong>ASP.NET Web Application</strong> &gt; <strong>ASP.NET 5 Empty</strong>，并且取消勾选“Host in the cloud”，因为我们要在本地运行。</p></li><li><p>若使用VS2017，选择 <strong>ASP.NET Core Web Application (.NET Core)</strong> &gt; <strong>ASP.NET Core 1.1 Empty</strong>。</p></li></ol><p>运行此应用以确保它能正常工作。</p><h3 id="设置服务项" tabindex="-1">设置服务项 <a class="header-anchor" href="#设置服务项" aria-label="Permalink to &quot;设置服务项&quot;">​</a></h3><h4 id="vs2015" tabindex="-1">VS2015 <a class="header-anchor" href="#vs2015" aria-label="Permalink to &quot;VS2015&quot;">​</a></h4><p>在 <code>project.json</code> 文件的 <code>&quot;dependencies&quot;</code> 字段里添加:</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">Microsoft.AspNet.StaticFiles</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">: </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">1.0.0-rc1-final</span><span style="color:#DEE492;">&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&quot;Microsoft.AspNet.StaticFiles&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;1.0.0-rc1-final&quot;</span></span></code></pre></div><p>最终的 dependencies 部分应该类似于下面这样：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">dependencies</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">: {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">Microsoft.AspNet.IISPlatformHandler</span><span style="color:#DEE492;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">1.0.0-rc1-final</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">Microsoft.AspNet.Server.Kestrel</span><span style="color:#DEE492;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">1.0.0-rc1-final</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">Microsoft.AspNet.StaticFiles</span><span style="color:#DEE492;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">1.0.0-rc1-final</span><span style="color:#DEE492;">&quot;</span></span>
<span class="line"><span style="color:#F6F6F4;">},</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&quot;dependencies&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;Microsoft.AspNet.IISPlatformHandler&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;1.0.0-rc1-final&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;Microsoft.AspNet.Server.Kestrel&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;1.0.0-rc1-final&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;Microsoft.AspNet.StaticFiles&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;1.0.0-rc1-final&quot;</span></span>
<span class="line"><span style="color:#24292E;">},</span></span></code></pre></div><p>用以下内容替换 <code>Startup.cs</code> 文件里的 <code>Configure</code> 函数：</p><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Configure</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">IApplicationBuilder</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;font-style:italic;">app</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F6F6F4;">{</span></span>
<span class="line"><span style="color:#F6F6F4;">    app.</span><span style="color:#62E884;">UseIISPlatformHandler</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">    app.</span><span style="color:#62E884;">UseDefaultFiles</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">    app.</span><span style="color:#62E884;">UseStaticFiles</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Configure</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">IApplicationBuilder</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">app</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    app.</span><span style="color:#6F42C1;">UseIISPlatformHandler</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    app.</span><span style="color:#6F42C1;">UseDefaultFiles</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    app.</span><span style="color:#6F42C1;">UseStaticFiles</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h4 id="vs2017" tabindex="-1">VS2017 <a class="header-anchor" href="#vs2017" aria-label="Permalink to &quot;VS2017&quot;">​</a></h4><p>打开 <strong>Dependencies</strong> &gt; <strong>Manage NuGet Packages</strong> &gt; <strong>Browse</strong>。搜索并安装<code>Microsoft.AspNetCore.StaticFiles</code> 1.1.2：</p><p>如下替换掉<code>Startup.cs</code>里<code>Configure</code>的内容：</p><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">public</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Configure</span><span style="color:#F6F6F4;">(</span><span style="color:#97E1F1;font-style:italic;">IApplicationBuilder</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;font-style:italic;">app</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F6F6F4;">{</span></span>
<span class="line"><span style="color:#F6F6F4;">    app.</span><span style="color:#62E884;">UseDefaultFiles</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">    app.</span><span style="color:#62E884;">UseStaticFiles</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Configure</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">IApplicationBuilder</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">app</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    app.</span><span style="color:#6F42C1;">UseDefaultFiles</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    app.</span><span style="color:#6F42C1;">UseStaticFiles</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>你可能需要重启VS，这样<code>UseDefaultFiles</code>和<code>UseStaticFiles</code>下面的波浪线才会消失。</p><h2 id="添加-typescript" tabindex="-1">添加 TypeScript <a class="header-anchor" href="#添加-typescript" aria-label="Permalink to &quot;添加 TypeScript&quot;">​</a></h2><p>下一步我们为 TypeScript 添加一个文件夹。</p><p>将文件夹命名为 <code>scripts</code>。</p><h3 id="添加-typescript-代码" tabindex="-1">添加 TypeScript 代码 <a class="header-anchor" href="#添加-typescript-代码" aria-label="Permalink to &quot;添加 TypeScript 代码&quot;">​</a></h3><p>在<code>scripts</code>上右击并选择<strong>New Item</strong>。 接着选择<strong>TypeScript File</strong>（也可能 .NET Core 部分），并将此文件命名为<code>app.ts</code>。</p><h3 id="添加示例代码" tabindex="-1">添加示例代码 <a class="header-anchor" href="#添加示例代码" aria-label="Permalink to &quot;添加示例代码&quot;">​</a></h3><p>将以下代码写入app.ts文件。</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">sayHello</span><span style="color:#F6F6F4;">() {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> compiler </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> (document.</span><span style="color:#62E884;">getElementById</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">compiler</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">as</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">HTMLInputElement</span><span style="color:#F6F6F4;">).value;</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> framework </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> (document.</span><span style="color:#62E884;">getElementById</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">framework</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">as</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">HTMLInputElement</span><span style="color:#F6F6F4;">).value;</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">\`Hello from </span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">compiler</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;"> and </span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">framework</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;">!\`</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">sayHello</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">compiler</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (document.</span><span style="color:#6F42C1;">getElementById</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;compiler&quot;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">HTMLInputElement</span><span style="color:#24292E;">).value;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">framework</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (document.</span><span style="color:#6F42C1;">getElementById</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;framework&quot;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">HTMLInputElement</span><span style="color:#24292E;">).value;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`Hello from \${</span><span style="color:#24292E;">compiler</span><span style="color:#032F62;">} and \${</span><span style="color:#24292E;">framework</span><span style="color:#032F62;">}!\`</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="构建设置" tabindex="-1">构建设置 <a class="header-anchor" href="#构建设置" aria-label="Permalink to &quot;构建设置&quot;">​</a></h3><h4 id="配置-typescript-编译器" tabindex="-1">配置 TypeScript 编译器 <a class="header-anchor" href="#配置-typescript-编译器" aria-label="Permalink to &quot;配置 TypeScript 编译器&quot;">​</a></h4><p>我们先来告诉TypeScript怎样构建。 右击scripts文件夹并选择<strong>New Item</strong>。 接着选择<strong>TypeScript Configuration File</strong>，保持文件的默认名字为<code>tsconfig.json</code>。</p><p>将默认的<code>tsconfig.json</code>内容改为如下所示：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">{</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">compilerOptions</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">: {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">noImplicitAny</span><span style="color:#DEE492;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">noEmitOnError</span><span style="color:#DEE492;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">sourceMap</span><span style="color:#DEE492;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">target</span><span style="color:#DEE492;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">es5</span><span style="color:#DEE492;">&quot;</span></span>
<span class="line"><span style="color:#F6F6F4;">  },</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">files</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">: [</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">./app.ts</span><span style="color:#DEE492;">&quot;</span></span>
<span class="line"><span style="color:#F6F6F4;">  ],</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">compileOnSave</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">: </span><span style="color:#BF9EEE;">true</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;compilerOptions&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;noImplicitAny&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;noEmitOnError&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;sourceMap&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;target&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;es5&quot;</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;files&quot;</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;./app.ts&quot;</span></span>
<span class="line"><span style="color:#24292E;">  ],</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;compileOnSave&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>看起来和默认的设置差不多，但注意以下不同之处：</p><ol><li>设置<code>&quot;noImplicitAny&quot;: true</code>。</li><li>显式列出了<code>&quot;files&quot;</code>而不是依据<code>&quot;excludes&quot;</code>。</li><li>设置<code>&quot;compileOnSave&quot;: true</code>。</li></ol><p>当你写新代码时，设置<code>&quot;noImplicitAny&quot;</code>选项是个不错的选择 — 这可以确保你不会错写任何新的类型。 设置<code>&quot;compileOnSave&quot;</code>选项可以确保你在运行web程序前自动编译保存变更后的代码。</p><h4 id="配置-npm" tabindex="-1">配置 NPM <a class="header-anchor" href="#配置-npm" aria-label="Permalink to &quot;配置 NPM&quot;">​</a></h4><p>现在，我们来配置NPM以使用我们能够下载JavaScript包。 在工程上右击并选择<strong>New Item</strong>。 接着选择<strong>NPM Configuration File</strong>，保持文件的默认名字为<code>package.json</code>。 在<code>&quot;devDependencies&quot;</code>部分添加&quot;gulp&quot;和&quot;del&quot;：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">devDependencies</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">: {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">gulp</span><span style="color:#DEE492;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">3.9.0</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">del</span><span style="color:#DEE492;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">2.2.0</span><span style="color:#DEE492;">&quot;</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&quot;devDependencies&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;gulp&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;3.9.0&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;del&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;2.2.0&quot;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>保存这个文件后，Visual Studio将开始安装gulp和del。 若没有自动开始，请右击package.json文件选择<strong>Restore Packages</strong>。</p><h4 id="设置-gulp" tabindex="-1">设置 gulp <a class="header-anchor" href="#设置-gulp" aria-label="Permalink to &quot;设置 gulp&quot;">​</a></h4><p>最后，添加一个新JavaScript文件<code>gulpfile.js</code>。 键入以下内容：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">/// &lt;binding AfterBuild=&#39;default&#39; Clean=&#39;clean&#39; /&gt;</span></span>
<span class="line"><span style="color:#7B7F8B;">/*</span></span>
<span class="line"><span style="color:#7B7F8B;">This file is the main entry point for defining Gulp tasks and using Gulp plugins.</span></span>
<span class="line"><span style="color:#7B7F8B;">Click here to learn more. http://go.microsoft.com/fwlink/?LinkId=518007</span></span>
<span class="line"><span style="color:#7B7F8B;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> gulp </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">require</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">gulp</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> del </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">require</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">del</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> paths </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  scripts</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> [</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">scripts/**/*.js</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">scripts/**/*.ts</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">scripts/**/*.map</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">],</span></span>
<span class="line"><span style="color:#F6F6F4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">gulp.</span><span style="color:#62E884;">task</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">clean</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> () {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">del</span><span style="color:#F6F6F4;">([</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">wwwroot/scripts/**/*</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">]);</span></span>
<span class="line"><span style="color:#F6F6F4;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">gulp.</span><span style="color:#62E884;">task</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">default</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> () {</span></span>
<span class="line"><span style="color:#F6F6F4;">  gulp.</span><span style="color:#62E884;">src</span><span style="color:#F6F6F4;">(paths.scripts).</span><span style="color:#62E884;">pipe</span><span style="color:#F6F6F4;">(gulp.</span><span style="color:#62E884;">dest</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">wwwroot/scripts</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">))</span></span>
<span class="line"><span style="color:#F6F6F4;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/// &lt;binding AfterBuild=&#39;default&#39; Clean=&#39;clean&#39; /&gt;</span></span>
<span class="line"><span style="color:#6A737D;">/*</span></span>
<span class="line"><span style="color:#6A737D;">This file is the main entry point for defining Gulp tasks and using Gulp plugins.</span></span>
<span class="line"><span style="color:#6A737D;">Click here to learn more. http://go.microsoft.com/fwlink/?LinkId=518007</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> gulp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;gulp&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> del </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;del&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> paths </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  scripts: [</span><span style="color:#032F62;">&#39;scripts/**/*.js&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;scripts/**/*.ts&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;scripts/**/*.map&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">gulp.</span><span style="color:#6F42C1;">task</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;clean&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">del</span><span style="color:#24292E;">([</span><span style="color:#032F62;">&#39;wwwroot/scripts/**/*&#39;</span><span style="color:#24292E;">]);</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">gulp.</span><span style="color:#6F42C1;">task</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;default&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">  gulp.</span><span style="color:#6F42C1;">src</span><span style="color:#24292E;">(paths.scripts).</span><span style="color:#6F42C1;">pipe</span><span style="color:#24292E;">(gulp.</span><span style="color:#6F42C1;">dest</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;wwwroot/scripts&#39;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><p>第一行是告诉Visual Studio构建完成后，立即运行&#39;default&#39;任务。 当你应答 Visual Studio 清除构建内容后，它也将运行&#39;clean&#39;任务。</p><p>现在，右击<code>gulpfile.js</code>并选择<strong>Task Runner Explorer</strong>。 若&#39;default&#39;和&#39;clean&#39;任务没有显示输出内容的话，请刷新explorer：</p><h3 id="编写html页" tabindex="-1">编写HTML页 <a class="header-anchor" href="#编写html页" aria-label="Permalink to &quot;编写HTML页&quot;">​</a></h3><p>在<code>wwwroot</code>中添加一个新建项 <code>index.html</code>。 在<code>index.html</code>中写入以下代码：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">&lt;!DOCTYPE html&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;html&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;head&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">    &lt;meta charset=&quot;utf-8&quot; /&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">    &lt;script src=&quot;scripts/app.js&quot;&gt;&lt;/script&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">    &lt;title&gt;&lt;/title&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;/head&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;body&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">    &lt;div id=&quot;message&quot;&gt;&lt;/div&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">    &lt;div&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">        Compiler: &lt;input id=&quot;compiler&quot; value=&quot;TypeScript&quot; onkeyup=&quot;document.getElementById(&#39;message&#39;).innerText = sayHello()&quot; /&gt;&lt;br /&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">        Framework: &lt;input id=&quot;framework&quot; value=&quot;ASP.NET&quot; onkeyup=&quot;document.getElementById(&#39;message&#39;).innerText = sayHello()&quot; /&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">    &lt;/div&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;/body&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;/html&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&lt;!DOCTYPE html&gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt;html&gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt;head&gt;</span></span>
<span class="line"><span style="color:#24292e;">    &lt;meta charset=&quot;utf-8&quot; /&gt;</span></span>
<span class="line"><span style="color:#24292e;">    &lt;script src=&quot;scripts/app.js&quot;&gt;&lt;/script&gt;</span></span>
<span class="line"><span style="color:#24292e;">    &lt;title&gt;&lt;/title&gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt;/head&gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt;body&gt;</span></span>
<span class="line"><span style="color:#24292e;">    &lt;div id=&quot;message&quot;&gt;&lt;/div&gt;</span></span>
<span class="line"><span style="color:#24292e;">    &lt;div&gt;</span></span>
<span class="line"><span style="color:#24292e;">        Compiler: &lt;input id=&quot;compiler&quot; value=&quot;TypeScript&quot; onkeyup=&quot;document.getElementById(&#39;message&#39;).innerText = sayHello()&quot; /&gt;&lt;br /&gt;</span></span>
<span class="line"><span style="color:#24292e;">        Framework: &lt;input id=&quot;framework&quot; value=&quot;ASP.NET&quot; onkeyup=&quot;document.getElementById(&#39;message&#39;).innerText = sayHello()&quot; /&gt;</span></span>
<span class="line"><span style="color:#24292e;">    &lt;/div&gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt;/body&gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt;/html&gt;</span></span></code></pre></div><h3 id="测试" tabindex="-1">测试 <a class="header-anchor" href="#测试" aria-label="Permalink to &quot;测试&quot;">​</a></h3><ol><li>运行项目。</li><li>在输入框中键入时，您应该看到一个消息：</li></ol><h3 id="调试" tabindex="-1">调试 <a class="header-anchor" href="#调试" aria-label="Permalink to &quot;调试&quot;">​</a></h3><ol><li>在 Edge 浏览器中，按 F12 键并选择 <strong>Debugger</strong> 标签页。</li><li>展开 localhost 列表，选择 scripts/app.ts</li><li>在 <code>return</code> 那一行上打一个断点。</li><li>在输入框中键入一些内容，确认TypeScript代码命中断点，观察它是否能正确地工作。</li></ol><p>这就是你需要知道的在ASP.NET中使用TypeScript的基本知识了。 接下来，我们引入Angular，写一个简单的Angular程序示例。</p><h2 id="添加-angular-2" tabindex="-1">添加 Angular 2 <a class="header-anchor" href="#添加-angular-2" aria-label="Permalink to &quot;添加 Angular 2&quot;">​</a></h2><h3 id="使用-npm-下载依赖的包" tabindex="-1">使用 NPM 下载依赖的包 <a class="header-anchor" href="#使用-npm-下载依赖的包" aria-label="Permalink to &quot;使用 NPM 下载依赖的包&quot;">​</a></h3><p>添加Angular 2和SystemJS到<code>package.json</code>的<code>dependencies</code>里。</p><p>对于VS2015，新的<code>dependencies</code>列表如下：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">dependencies</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">: {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">angular2</span><span style="color:#DEE492;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">2.0.0-beta.11</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">systemjs</span><span style="color:#DEE492;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">0.19.24</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">gulp</span><span style="color:#DEE492;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">3.9.0</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">del</span><span style="color:#DEE492;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">2.2.0</span><span style="color:#DEE492;">&quot;</span></span>
<span class="line"><span style="color:#F6F6F4;">},</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&quot;dependencies&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;angular2&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;2.0.0-beta.11&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;systemjs&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;0.19.24&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;gulp&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;3.9.0&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;del&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;2.2.0&quot;</span></span>
<span class="line"><span style="color:#24292E;">},</span></span></code></pre></div><p>若使用VS2017，因为NPM3反对同行的依赖（peer dependencies），我们需要把Angular 2同行的依赖也直接列为依赖项：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">dependencies</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">: {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">angular2</span><span style="color:#DEE492;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">2.0.0-beta.11</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">reflect-metadata</span><span style="color:#DEE492;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">0.1.2</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">rxjs</span><span style="color:#DEE492;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">5.0.0-beta.2</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">zone.js</span><span style="color:#DEE492;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">^0.6.4</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">systemjs</span><span style="color:#DEE492;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">0.19.24</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">gulp</span><span style="color:#DEE492;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">3.9.0</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">del</span><span style="color:#DEE492;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">2.2.0</span><span style="color:#DEE492;">&quot;</span></span>
<span class="line"><span style="color:#F6F6F4;">},</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&quot;dependencies&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;angular2&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;2.0.0-beta.11&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;reflect-metadata&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;0.1.2&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;rxjs&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;5.0.0-beta.2&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;zone.js&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;^0.6.4&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;systemjs&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;0.19.24&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;gulp&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;3.9.0&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;del&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;2.2.0&quot;</span></span>
<span class="line"><span style="color:#24292E;">},</span></span></code></pre></div><h3 id="更新-tsconfig-json" tabindex="-1">更新 tsconfig.json <a class="header-anchor" href="#更新-tsconfig-json" aria-label="Permalink to &quot;更新 tsconfig.json&quot;">​</a></h3><p>现在安装好了Angular 2及其依赖项，我们需要启用TypeScript中实验性的装饰器支持。 我们还需要添加ES2015的声明，因为Angular使用core-js来支持像<code>Promise</code>的功能。 在未来，装饰器会成为默认设置，那时也就不再需要这些设置了。</p><p>添加<code>&quot;experimentalDecorators&quot;: true, &quot;emitDecoratorMetadata&quot;: true</code>到<code>&quot;compilerOptions&quot;</code>部分。 然后，再添加<code>&quot;lib&quot;: [&quot;es2015&quot;, &quot;es5&quot;, &quot;dom&quot;]</code>到<code>&quot;compilerOptions&quot;</code>，以引入ES2015的声明。 最后，我们需要添加<code>&quot;./model.ts&quot;</code>到<code>&quot;files&quot;</code>里，我们接下来会创建它。 现在<code>tsconfig.json</code>看起来如下：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">{</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">compilerOptions</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">: {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">noImplicitAny</span><span style="color:#DEE492;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">noEmitOnError</span><span style="color:#DEE492;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">sourceMap</span><span style="color:#DEE492;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">experimentalDecorators</span><span style="color:#DEE492;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">emitDecoratorMetadata</span><span style="color:#DEE492;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">target</span><span style="color:#DEE492;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">es5</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">lib</span><span style="color:#DEE492;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> [</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">es2015</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">es5</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">dom</span><span style="color:#DEE492;">&quot;</span></span>
<span class="line"><span style="color:#F6F6F4;">    ]</span></span>
<span class="line"><span style="color:#F6F6F4;">  },</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">files</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">: [</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">./app.ts</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">./model.ts</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">./main.ts</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  ],</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">compileOnSave</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">: </span><span style="color:#BF9EEE;">true</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;compilerOptions&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;noImplicitAny&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;noEmitOnError&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;sourceMap&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;experimentalDecorators&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;emitDecoratorMetadata&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;target&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;es5&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;lib&quot;</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;es2015&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;es5&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;dom&quot;</span></span>
<span class="line"><span style="color:#24292E;">    ]</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;files&quot;</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;./app.ts&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;./model.ts&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;./main.ts&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  ],</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;compileOnSave&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="将-angular-添加到-gulp-构建中" tabindex="-1">将 Angular 添加到 gulp 构建中 <a class="header-anchor" href="#将-angular-添加到-gulp-构建中" aria-label="Permalink to &quot;将 Angular 添加到 gulp 构建中&quot;">​</a></h3><p>最后，我们需要确保 Angular 文件作为 build 的一部分复制进来。 我们需要添加：</p><ol><li>库文件目录。</li><li>添加一个 <code>lib</code> 任务来输送文件到 <code>wwwroot</code>。</li><li>在 <code>default</code> 任务上添加 <code>lib</code> 任务依赖。</li></ol><p>更新后的 <code>gulpfile.js</code> 像如下所示：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">/// &lt;binding AfterBuild=&#39;default&#39; Clean=&#39;clean&#39; /&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">/*</span></span>
<span class="line"><span style="color:#f6f6f4;">This file is the main entry point for defining Gulp tasks and using Gulp plugins.</span></span>
<span class="line"><span style="color:#f6f6f4;">Click here to learn more. http://go.microsoft.com/fwlink/?LinkId=518007</span></span>
<span class="line"><span style="color:#f6f6f4;">*/</span></span>
<span class="line"><span style="color:#f6f6f4;"></span></span>
<span class="line"><span style="color:#f6f6f4;">var gulp = require(&#39;gulp&#39;);</span></span>
<span class="line"><span style="color:#f6f6f4;">var del = require(&#39;del&#39;);</span></span>
<span class="line"><span style="color:#f6f6f4;"></span></span>
<span class="line"><span style="color:#f6f6f4;">var paths = {</span></span>
<span class="line"><span style="color:#f6f6f4;">    scripts: [&#39;scripts/**/*.js&#39;, &#39;scripts/**/*.ts&#39;, &#39;scripts/**/*.map&#39;],</span></span>
<span class="line"><span style="color:#f6f6f4;">    libs: [&#39;node_modules/angular2/bundles/angular2.js&#39;,</span></span>
<span class="line"><span style="color:#f6f6f4;">           &#39;node_modules/angular2/bundles/angular2-polyfills.js&#39;,</span></span>
<span class="line"><span style="color:#f6f6f4;">           &#39;node_modules/systemjs/dist/system.src.js&#39;,</span></span>
<span class="line"><span style="color:#f6f6f4;">           &#39;node_modules/rxjs/bundles/Rx.js&#39;]</span></span>
<span class="line"><span style="color:#f6f6f4;">};</span></span>
<span class="line"><span style="color:#f6f6f4;"></span></span>
<span class="line"><span style="color:#f6f6f4;">gulp.task(&#39;lib&#39;, function () {</span></span>
<span class="line"><span style="color:#f6f6f4;">    gulp.src(paths.libs).pipe(gulp.dest(&#39;wwwroot/scripts/lib&#39;));</span></span>
<span class="line"><span style="color:#f6f6f4;">});</span></span>
<span class="line"><span style="color:#f6f6f4;"></span></span>
<span class="line"><span style="color:#f6f6f4;">gulp.task(&#39;clean&#39;, function () {</span></span>
<span class="line"><span style="color:#f6f6f4;">    return del([&#39;wwwroot/scripts/**/*&#39;]);</span></span>
<span class="line"><span style="color:#f6f6f4;">});</span></span>
<span class="line"><span style="color:#f6f6f4;"></span></span>
<span class="line"><span style="color:#f6f6f4;">gulp.task(&#39;default&#39;, [&#39;lib&#39;], function () {</span></span>
<span class="line"><span style="color:#f6f6f4;">    gulp.src(paths.scripts).pipe(gulp.dest(&#39;wwwroot/scripts&#39;));</span></span>
<span class="line"><span style="color:#f6f6f4;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">/// &lt;binding AfterBuild=&#39;default&#39; Clean=&#39;clean&#39; /&gt;</span></span>
<span class="line"><span style="color:#24292e;">/*</span></span>
<span class="line"><span style="color:#24292e;">This file is the main entry point for defining Gulp tasks and using Gulp plugins.</span></span>
<span class="line"><span style="color:#24292e;">Click here to learn more. http://go.microsoft.com/fwlink/?LinkId=518007</span></span>
<span class="line"><span style="color:#24292e;">*/</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">var gulp = require(&#39;gulp&#39;);</span></span>
<span class="line"><span style="color:#24292e;">var del = require(&#39;del&#39;);</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">var paths = {</span></span>
<span class="line"><span style="color:#24292e;">    scripts: [&#39;scripts/**/*.js&#39;, &#39;scripts/**/*.ts&#39;, &#39;scripts/**/*.map&#39;],</span></span>
<span class="line"><span style="color:#24292e;">    libs: [&#39;node_modules/angular2/bundles/angular2.js&#39;,</span></span>
<span class="line"><span style="color:#24292e;">           &#39;node_modules/angular2/bundles/angular2-polyfills.js&#39;,</span></span>
<span class="line"><span style="color:#24292e;">           &#39;node_modules/systemjs/dist/system.src.js&#39;,</span></span>
<span class="line"><span style="color:#24292e;">           &#39;node_modules/rxjs/bundles/Rx.js&#39;]</span></span>
<span class="line"><span style="color:#24292e;">};</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">gulp.task(&#39;lib&#39;, function () {</span></span>
<span class="line"><span style="color:#24292e;">    gulp.src(paths.libs).pipe(gulp.dest(&#39;wwwroot/scripts/lib&#39;));</span></span>
<span class="line"><span style="color:#24292e;">});</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">gulp.task(&#39;clean&#39;, function () {</span></span>
<span class="line"><span style="color:#24292e;">    return del([&#39;wwwroot/scripts/**/*&#39;]);</span></span>
<span class="line"><span style="color:#24292e;">});</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">gulp.task(&#39;default&#39;, [&#39;lib&#39;], function () {</span></span>
<span class="line"><span style="color:#24292e;">    gulp.src(paths.scripts).pipe(gulp.dest(&#39;wwwroot/scripts&#39;));</span></span>
<span class="line"><span style="color:#24292e;">});</span></span></code></pre></div><p>此外，保存了此gulpfile后，要确保 Task Runner Explorer 能看到 <code>lib</code> 任务。</p><h3 id="用-typescript-写一个简单的-angular-应用" tabindex="-1">用 TypeScript 写一个简单的 Angular 应用 <a class="header-anchor" href="#用-typescript-写一个简单的-angular-应用" aria-label="Permalink to &quot;用 TypeScript 写一个简单的 Angular 应用&quot;">​</a></h3><p>首先，将 <code>app.ts</code> 改成：</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> {Component} </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">angular2/core</span><span style="color:#DEE492;">&quot;</span></span>
<span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> {MyModel} </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">./model</span><span style="color:#DEE492;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">@</span><span style="color:#62E884;">Component</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">    selector</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">\`my-app\`</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    template</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">\`&lt;div&gt;Hello from {{getCompiler()}}&lt;/div&gt;\`</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span>
<span class="line"><span style="color:#F286C4;">export</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">class</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">MyApp</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    model </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">MyModel</span><span style="color:#F6F6F4;">();</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#62E884;">getCompiler</span><span style="color:#F6F6F4;">() {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;font-style:italic;">this</span><span style="color:#F6F6F4;">.model.compiler;</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> {Component} </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;angular2/core&quot;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> {MyModel} </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;./model&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#6F42C1;">Component</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">    selector: </span><span style="color:#032F62;">\`my-app\`</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    template: </span><span style="color:#032F62;">\`&lt;div&gt;Hello from {{getCompiler()}}&lt;/div&gt;\`</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MyApp</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">model</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MyModel</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">getCompiler</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.model.compiler;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>接着在<code>scripts</code>中添加TypeScript文件<code>model.ts</code>:</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">export</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">class</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">MyModel</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    compiler </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">TypeScript</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MyModel</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">compiler</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;TypeScript&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>再在<code>scripts</code>中添加<code>main.ts</code>：</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> {bootstrap} </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">angular2/platform/browser</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> {MyApp} </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">./app</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">;</span></span>
<span class="line"><span style="color:#62E884;">bootstrap</span><span style="color:#F6F6F4;">(MyApp);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> {bootstrap} </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;angular2/platform/browser&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> {MyApp} </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;./app&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6F42C1;">bootstrap</span><span style="color:#24292E;">(MyApp);</span></span></code></pre></div><p>最后，将<code>index.html</code>改成：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#f6f6f4;">&lt;!DOCTYPE html&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;html&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;head&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">    &lt;meta charset=&quot;utf-8&quot; /&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">    &lt;script src=&quot;scripts/lib/angular2-polyfills.js&quot;&gt;&lt;/script&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">    &lt;script src=&quot;scripts/lib/system.src.js&quot;&gt;&lt;/script&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">    &lt;script src=&quot;scripts/lib/rx.js&quot;&gt;&lt;/script&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">    &lt;script src=&quot;scripts/lib/angular2.js&quot;&gt;&lt;/script&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">    &lt;script&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">    System.config({</span></span>
<span class="line"><span style="color:#f6f6f4;">        packages: {</span></span>
<span class="line"><span style="color:#f6f6f4;">            &#39;scripts&#39;: {</span></span>
<span class="line"><span style="color:#f6f6f4;">                format: &#39;cjs&#39;,</span></span>
<span class="line"><span style="color:#f6f6f4;">                defaultExtension: &#39;js&#39;</span></span>
<span class="line"><span style="color:#f6f6f4;">            }</span></span>
<span class="line"><span style="color:#f6f6f4;">        }</span></span>
<span class="line"><span style="color:#f6f6f4;">    });</span></span>
<span class="line"><span style="color:#f6f6f4;">    System.import(&#39;scripts/main&#39;).then(null, console.error.bind(console));</span></span>
<span class="line"><span style="color:#f6f6f4;">    &lt;/script&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">    &lt;title&gt;&lt;/title&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;/head&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;body&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">    &lt;my-app&gt;Loading...&lt;/my-app&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;/body&gt;</span></span>
<span class="line"><span style="color:#f6f6f4;">&lt;/html&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&lt;!DOCTYPE html&gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt;html&gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt;head&gt;</span></span>
<span class="line"><span style="color:#24292e;">    &lt;meta charset=&quot;utf-8&quot; /&gt;</span></span>
<span class="line"><span style="color:#24292e;">    &lt;script src=&quot;scripts/lib/angular2-polyfills.js&quot;&gt;&lt;/script&gt;</span></span>
<span class="line"><span style="color:#24292e;">    &lt;script src=&quot;scripts/lib/system.src.js&quot;&gt;&lt;/script&gt;</span></span>
<span class="line"><span style="color:#24292e;">    &lt;script src=&quot;scripts/lib/rx.js&quot;&gt;&lt;/script&gt;</span></span>
<span class="line"><span style="color:#24292e;">    &lt;script src=&quot;scripts/lib/angular2.js&quot;&gt;&lt;/script&gt;</span></span>
<span class="line"><span style="color:#24292e;">    &lt;script&gt;</span></span>
<span class="line"><span style="color:#24292e;">    System.config({</span></span>
<span class="line"><span style="color:#24292e;">        packages: {</span></span>
<span class="line"><span style="color:#24292e;">            &#39;scripts&#39;: {</span></span>
<span class="line"><span style="color:#24292e;">                format: &#39;cjs&#39;,</span></span>
<span class="line"><span style="color:#24292e;">                defaultExtension: &#39;js&#39;</span></span>
<span class="line"><span style="color:#24292e;">            }</span></span>
<span class="line"><span style="color:#24292e;">        }</span></span>
<span class="line"><span style="color:#24292e;">    });</span></span>
<span class="line"><span style="color:#24292e;">    System.import(&#39;scripts/main&#39;).then(null, console.error.bind(console));</span></span>
<span class="line"><span style="color:#24292e;">    &lt;/script&gt;</span></span>
<span class="line"><span style="color:#24292e;">    &lt;title&gt;&lt;/title&gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt;/head&gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt;body&gt;</span></span>
<span class="line"><span style="color:#24292e;">    &lt;my-app&gt;Loading...&lt;/my-app&gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt;/body&gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt;/html&gt;</span></span></code></pre></div><p>这里加载了此应用。 运行 ASP.NET 应用，你应该能看到一个div显示&quot;Loading...&quot;紧接着更新成显示&quot;Hello from TypeScript&quot;。</p>`,81),e=[o];function t(c,r,y,i,F,E){return n(),a("div",null,e)}const q=s(p,[["render",t]]);export{d as __pageData,q as default};
